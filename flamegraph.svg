<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="51776"><g><title>evolu`evolu::model (7 samples, 0.01%)</title><rect x="0.0039%" y="693" width="0.0135%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="7"/><text x="0.2539%" y="703.50"></text></g><g><title>evolu`evolu::model::world::World::new (7 samples, 0.01%)</title><rect x="0.0039%" y="677" width="0.0135%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="7"/><text x="0.2539%" y="687.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.01%)</title><rect x="0.0348%" y="453" width="0.0135%" height="15" fill="rgb(221,193,54)" fg:x="18" fg:w="7"/><text x="0.2848%" y="463.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (8 samples, 0.02%)</title><rect x="0.0348%" y="565" width="0.0155%" height="15" fill="rgb(248,212,6)" fg:x="18" fg:w="8"/><text x="0.2848%" y="575.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (8 samples, 0.02%)</title><rect x="0.0348%" y="549" width="0.0155%" height="15" fill="rgb(208,68,35)" fg:x="18" fg:w="8"/><text x="0.2848%" y="559.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (8 samples, 0.02%)</title><rect x="0.0348%" y="533" width="0.0155%" height="15" fill="rgb(232,128,0)" fg:x="18" fg:w="8"/><text x="0.2848%" y="543.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (8 samples, 0.02%)</title><rect x="0.0348%" y="517" width="0.0155%" height="15" fill="rgb(207,160,47)" fg:x="18" fg:w="8"/><text x="0.2848%" y="527.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (8 samples, 0.02%)</title><rect x="0.0348%" y="501" width="0.0155%" height="15" fill="rgb(228,23,34)" fg:x="18" fg:w="8"/><text x="0.2848%" y="511.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (8 samples, 0.02%)</title><rect x="0.0348%" y="485" width="0.0155%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="8"/><text x="0.2848%" y="495.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (8 samples, 0.02%)</title><rect x="0.0348%" y="469" width="0.0155%" height="15" fill="rgb(220,122,19)" fg:x="18" fg:w="8"/><text x="0.2848%" y="479.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (10 samples, 0.02%)</title><rect x="0.0348%" y="581" width="0.0193%" height="15" fill="rgb(250,228,42)" fg:x="18" fg:w="10"/><text x="0.2848%" y="591.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (16 samples, 0.03%)</title><rect x="0.0348%" y="597" width="0.0309%" height="15" fill="rgb(240,193,28)" fg:x="18" fg:w="16"/><text x="0.2848%" y="607.50"></text></g><g><title>evolu`nannou::window::Builder::build (28 samples, 0.05%)</title><rect x="0.0174%" y="693" width="0.0541%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="28"/><text x="0.2674%" y="703.50"></text></g><g><title>evolu`winit::platform_impl::platform::window::UnownedWindow::new (23 samples, 0.04%)</title><rect x="0.0270%" y="677" width="0.0444%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="23"/><text x="0.2770%" y="687.50"></text></g><g><title>evolu`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (21 samples, 0.04%)</title><rect x="0.0309%" y="661" width="0.0406%" height="15" fill="rgb(217,207,13)" fg:x="16" fg:w="21"/><text x="0.2809%" y="671.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (21 samples, 0.04%)</title><rect x="0.0309%" y="645" width="0.0406%" height="15" fill="rgb(231,73,38)" fg:x="16" fg:w="21"/><text x="0.2809%" y="655.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (21 samples, 0.04%)</title><rect x="0.0309%" y="629" width="0.0406%" height="15" fill="rgb(225,20,46)" fg:x="16" fg:w="21"/><text x="0.2809%" y="639.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (19 samples, 0.04%)</title><rect x="0.0348%" y="613" width="0.0367%" height="15" fill="rgb(210,31,41)" fg:x="18" fg:w="19"/><text x="0.2848%" y="623.50"></text></g><g><title>AppKit`-[NSApplication init] (16 samples, 0.03%)</title><rect x="0.0734%" y="645" width="0.0309%" height="15" fill="rgb(221,200,47)" fg:x="38" fg:w="16"/><text x="0.3234%" y="655.50"></text></g><g><title>AppKit`_NSInitializeAppContext (7 samples, 0.01%)</title><rect x="0.0908%" y="629" width="0.0135%" height="15" fill="rgb(226,26,5)" fg:x="47" fg:w="7"/><text x="0.3408%" y="639.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (17 samples, 0.03%)</title><rect x="0.0734%" y="661" width="0.0328%" height="15" fill="rgb(249,33,26)" fg:x="38" fg:w="17"/><text x="0.3234%" y="671.50"></text></g><g><title>evolu`winit::event_loop::EventLoop&lt;()&gt;::new (20 samples, 0.04%)</title><rect x="0.0734%" y="693" width="0.0386%" height="15" fill="rgb(235,183,28)" fg:x="38" fg:w="20"/><text x="0.3234%" y="703.50"></text></g><g><title>evolu`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (20 samples, 0.04%)</title><rect x="0.0734%" y="677" width="0.0386%" height="15" fill="rgb(221,5,38)" fg:x="38" fg:w="20"/><text x="0.3234%" y="687.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (6 samples, 0.01%)</title><rect x="0.1159%" y="597" width="0.0116%" height="15" fill="rgb(247,18,42)" fg:x="60" fg:w="6"/><text x="0.3659%" y="607.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (16 samples, 0.03%)</title><rect x="0.1120%" y="645" width="0.0309%" height="15" fill="rgb(241,131,45)" fg:x="58" fg:w="16"/><text x="0.3620%" y="655.50"></text></g><g><title>evolu`winit::platform_impl::platform::app::send_event (16 samples, 0.03%)</title><rect x="0.1120%" y="629" width="0.0309%" height="15" fill="rgb(249,31,29)" fg:x="58" fg:w="16"/><text x="0.3620%" y="639.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (16 samples, 0.03%)</title><rect x="0.1120%" y="613" width="0.0309%" height="15" fill="rgb(225,111,53)" fg:x="58" fg:w="16"/><text x="0.3620%" y="623.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (8 samples, 0.02%)</title><rect x="0.1468%" y="469" width="0.0155%" height="15" fill="rgb(238,160,17)" fg:x="76" fg:w="8"/><text x="0.3968%" y="479.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (8 samples, 0.02%)</title><rect x="0.1468%" y="453" width="0.0155%" height="15" fill="rgb(214,148,48)" fg:x="76" fg:w="8"/><text x="0.3968%" y="463.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (8 samples, 0.02%)</title><rect x="0.1468%" y="437" width="0.0155%" height="15" fill="rgb(232,36,49)" fg:x="76" fg:w="8"/><text x="0.3968%" y="447.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (8 samples, 0.02%)</title><rect x="0.1468%" y="421" width="0.0155%" height="15" fill="rgb(209,103,24)" fg:x="76" fg:w="8"/><text x="0.3968%" y="431.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (8 samples, 0.02%)</title><rect x="0.1468%" y="405" width="0.0155%" height="15" fill="rgb(229,88,8)" fg:x="76" fg:w="8"/><text x="0.3968%" y="415.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (8 samples, 0.02%)</title><rect x="0.1468%" y="389" width="0.0155%" height="15" fill="rgb(213,181,19)" fg:x="76" fg:w="8"/><text x="0.3968%" y="399.50"></text></g><g><title>evolu`winit::platform_impl::platform::app_delegate::did_finish_launching (8 samples, 0.02%)</title><rect x="0.1468%" y="373" width="0.0155%" height="15" fill="rgb(254,191,54)" fg:x="76" fg:w="8"/><text x="0.3968%" y="383.50"></text></g><g><title>evolu`winit::platform_impl::platform::app_state::AppState::launched (8 samples, 0.02%)</title><rect x="0.1468%" y="357" width="0.0155%" height="15" fill="rgb(241,83,37)" fg:x="76" fg:w="8"/><text x="0.3968%" y="367.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (6 samples, 0.01%)</title><rect x="0.1506%" y="341" width="0.0116%" height="15" fill="rgb(233,36,39)" fg:x="78" fg:w="6"/><text x="0.4006%" y="351.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (9 samples, 0.02%)</title><rect x="0.1468%" y="613" width="0.0174%" height="15" fill="rgb(226,3,54)" fg:x="76" fg:w="9"/><text x="0.3968%" y="623.50"></text></g><g><title>AE`aeProcessAppleEvent (9 samples, 0.02%)</title><rect x="0.1468%" y="597" width="0.0174%" height="15" fill="rgb(245,192,40)" fg:x="76" fg:w="9"/><text x="0.3968%" y="607.50"></text></g><g><title>AE`0x00007ff80b2de5e6 (9 samples, 0.02%)</title><rect x="0.1468%" y="581" width="0.0174%" height="15" fill="rgb(238,167,29)" fg:x="76" fg:w="9"/><text x="0.3968%" y="591.50"></text></g><g><title>AE`0x00007ff80b2de665 (9 samples, 0.02%)</title><rect x="0.1468%" y="565" width="0.0174%" height="15" fill="rgb(232,182,51)" fg:x="76" fg:w="9"/><text x="0.3968%" y="575.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (9 samples, 0.02%)</title><rect x="0.1468%" y="549" width="0.0174%" height="15" fill="rgb(231,60,39)" fg:x="76" fg:w="9"/><text x="0.3968%" y="559.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (9 samples, 0.02%)</title><rect x="0.1468%" y="533" width="0.0174%" height="15" fill="rgb(208,69,12)" fg:x="76" fg:w="9"/><text x="0.3968%" y="543.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (9 samples, 0.02%)</title><rect x="0.1468%" y="517" width="0.0174%" height="15" fill="rgb(235,93,37)" fg:x="76" fg:w="9"/><text x="0.3968%" y="527.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (9 samples, 0.02%)</title><rect x="0.1468%" y="501" width="0.0174%" height="15" fill="rgb(213,116,39)" fg:x="76" fg:w="9"/><text x="0.3968%" y="511.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (9 samples, 0.02%)</title><rect x="0.1468%" y="485" width="0.0174%" height="15" fill="rgb(222,207,29)" fg:x="76" fg:w="9"/><text x="0.3968%" y="495.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (9 samples, 0.02%)</title><rect x="0.1719%" y="229" width="0.0174%" height="15" fill="rgb(206,96,30)" fg:x="89" fg:w="9"/><text x="0.4219%" y="239.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (9 samples, 0.02%)</title><rect x="0.1719%" y="213" width="0.0174%" height="15" fill="rgb(218,138,4)" fg:x="89" fg:w="9"/><text x="0.4219%" y="223.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (13 samples, 0.03%)</title><rect x="0.1661%" y="581" width="0.0251%" height="15" fill="rgb(250,191,14)" fg:x="86" fg:w="13"/><text x="0.4161%" y="591.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (13 samples, 0.03%)</title><rect x="0.1661%" y="565" width="0.0251%" height="15" fill="rgb(239,60,40)" fg:x="86" fg:w="13"/><text x="0.4161%" y="575.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (13 samples, 0.03%)</title><rect x="0.1661%" y="549" width="0.0251%" height="15" fill="rgb(206,27,48)" fg:x="86" fg:w="13"/><text x="0.4161%" y="559.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (13 samples, 0.03%)</title><rect x="0.1661%" y="533" width="0.0251%" height="15" fill="rgb(225,35,8)" fg:x="86" fg:w="13"/><text x="0.4161%" y="543.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (13 samples, 0.03%)</title><rect x="0.1661%" y="517" width="0.0251%" height="15" fill="rgb(250,213,24)" fg:x="86" fg:w="13"/><text x="0.4161%" y="527.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (13 samples, 0.03%)</title><rect x="0.1661%" y="501" width="0.0251%" height="15" fill="rgb(247,123,22)" fg:x="86" fg:w="13"/><text x="0.4161%" y="511.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (13 samples, 0.03%)</title><rect x="0.1661%" y="485" width="0.0251%" height="15" fill="rgb(231,138,38)" fg:x="86" fg:w="13"/><text x="0.4161%" y="495.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (13 samples, 0.03%)</title><rect x="0.1661%" y="469" width="0.0251%" height="15" fill="rgb(231,145,46)" fg:x="86" fg:w="13"/><text x="0.4161%" y="479.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (13 samples, 0.03%)</title><rect x="0.1661%" y="453" width="0.0251%" height="15" fill="rgb(251,118,11)" fg:x="86" fg:w="13"/><text x="0.4161%" y="463.50"></text></g><g><title>HIToolbox`ShowHide (10 samples, 0.02%)</title><rect x="0.1719%" y="437" width="0.0193%" height="15" fill="rgb(217,147,25)" fg:x="89" fg:w="10"/><text x="0.4219%" y="447.50"></text></g><g><title>HIToolbox`_ShowHideWindows (10 samples, 0.02%)</title><rect x="0.1719%" y="421" width="0.0193%" height="15" fill="rgb(247,81,37)" fg:x="89" fg:w="10"/><text x="0.4219%" y="431.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (10 samples, 0.02%)</title><rect x="0.1719%" y="405" width="0.0193%" height="15" fill="rgb(209,12,38)" fg:x="89" fg:w="10"/><text x="0.4219%" y="415.50"></text></g><g><title>HIToolbox`HIView::Render (10 samples, 0.02%)</title><rect x="0.1719%" y="389" width="0.0193%" height="15" fill="rgb(227,1,9)" fg:x="89" fg:w="10"/><text x="0.4219%" y="399.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (10 samples, 0.02%)</title><rect x="0.1719%" y="373" width="0.0193%" height="15" fill="rgb(248,47,43)" fg:x="89" fg:w="10"/><text x="0.4219%" y="383.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (10 samples, 0.02%)</title><rect x="0.1719%" y="357" width="0.0193%" height="15" fill="rgb(221,10,30)" fg:x="89" fg:w="10"/><text x="0.4219%" y="367.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (10 samples, 0.02%)</title><rect x="0.1719%" y="341" width="0.0193%" height="15" fill="rgb(210,229,1)" fg:x="89" fg:w="10"/><text x="0.4219%" y="351.50"></text></g><g><title>HIToolbox`HIView::SendDraw (10 samples, 0.02%)</title><rect x="0.1719%" y="325" width="0.0193%" height="15" fill="rgb(222,148,37)" fg:x="89" fg:w="10"/><text x="0.4219%" y="335.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (10 samples, 0.02%)</title><rect x="0.1719%" y="309" width="0.0193%" height="15" fill="rgb(234,67,33)" fg:x="89" fg:w="10"/><text x="0.4219%" y="319.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (10 samples, 0.02%)</title><rect x="0.1719%" y="293" width="0.0193%" height="15" fill="rgb(247,98,35)" fg:x="89" fg:w="10"/><text x="0.4219%" y="303.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (10 samples, 0.02%)</title><rect x="0.1719%" y="277" width="0.0193%" height="15" fill="rgb(247,138,52)" fg:x="89" fg:w="10"/><text x="0.4219%" y="287.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (10 samples, 0.02%)</title><rect x="0.1719%" y="261" width="0.0193%" height="15" fill="rgb(213,79,30)" fg:x="89" fg:w="10"/><text x="0.4219%" y="271.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (10 samples, 0.02%)</title><rect x="0.1719%" y="245" width="0.0193%" height="15" fill="rgb(246,177,23)" fg:x="89" fg:w="10"/><text x="0.4219%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (10 samples, 0.02%)</title><rect x="0.2240%" y="533" width="0.0193%" height="15" fill="rgb(230,62,27)" fg:x="116" fg:w="10"/><text x="0.4740%" y="543.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (10 samples, 0.02%)</title><rect x="0.2240%" y="517" width="0.0193%" height="15" fill="rgb(216,154,8)" fg:x="116" fg:w="10"/><text x="0.4740%" y="527.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (7 samples, 0.01%)</title><rect x="0.2472%" y="453" width="0.0135%" height="15" fill="rgb(244,35,45)" fg:x="128" fg:w="7"/><text x="0.4972%" y="463.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (7 samples, 0.01%)</title><rect x="0.2472%" y="437" width="0.0135%" height="15" fill="rgb(251,115,12)" fg:x="128" fg:w="7"/><text x="0.4972%" y="447.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (7 samples, 0.01%)</title><rect x="0.2472%" y="421" width="0.0135%" height="15" fill="rgb(240,54,50)" fg:x="128" fg:w="7"/><text x="0.4972%" y="431.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (8 samples, 0.02%)</title><rect x="0.2472%" y="485" width="0.0155%" height="15" fill="rgb(233,84,52)" fg:x="128" fg:w="8"/><text x="0.4972%" y="495.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (8 samples, 0.02%)</title><rect x="0.2472%" y="469" width="0.0155%" height="15" fill="rgb(207,117,47)" fg:x="128" fg:w="8"/><text x="0.4972%" y="479.50"></text></g><g><title>QuartzCore`0x7ff80c89fa10 (6 samples, 0.01%)</title><rect x="0.2646%" y="469" width="0.0116%" height="15" fill="rgb(249,43,39)" fg:x="137" fg:w="6"/><text x="0.5146%" y="479.50"></text></g><g><title>QuartzCore`0x7ff80c8a0f46 (6 samples, 0.01%)</title><rect x="0.2646%" y="453" width="0.0116%" height="15" fill="rgb(209,38,44)" fg:x="137" fg:w="6"/><text x="0.5146%" y="463.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (6 samples, 0.01%)</title><rect x="0.2646%" y="437" width="0.0116%" height="15" fill="rgb(236,212,23)" fg:x="137" fg:w="6"/><text x="0.5146%" y="447.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (6 samples, 0.01%)</title><rect x="0.2646%" y="421" width="0.0116%" height="15" fill="rgb(242,79,21)" fg:x="137" fg:w="6"/><text x="0.5146%" y="431.50"></text></g><g><title>QuartzCore`0x7ff80ca374d6 (7 samples, 0.01%)</title><rect x="0.2762%" y="453" width="0.0135%" height="15" fill="rgb(211,96,35)" fg:x="143" fg:w="7"/><text x="0.5262%" y="463.50"></text></g><g><title>QuartzCore`0x7ff80c8bebf0 (7 samples, 0.01%)</title><rect x="0.2762%" y="437" width="0.0135%" height="15" fill="rgb(253,215,40)" fg:x="143" fg:w="7"/><text x="0.5262%" y="447.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (28 samples, 0.05%)</title><rect x="0.2472%" y="501" width="0.0541%" height="15" fill="rgb(211,81,21)" fg:x="128" fg:w="28"/><text x="0.4972%" y="511.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (20 samples, 0.04%)</title><rect x="0.2627%" y="485" width="0.0386%" height="15" fill="rgb(208,190,38)" fg:x="136" fg:w="20"/><text x="0.5127%" y="495.50"></text></g><g><title>QuartzCore`0x7ff80c89fb66 (13 samples, 0.03%)</title><rect x="0.2762%" y="469" width="0.0251%" height="15" fill="rgb(235,213,38)" fg:x="143" fg:w="13"/><text x="0.5262%" y="479.50"></text></g><g><title>evolu`DYLD-STUB$$memcpy (10 samples, 0.02%)</title><rect x="3.2950%" y="389" width="0.0193%" height="15" fill="rgb(237,122,38)" fg:x="1706" fg:w="10"/><text x="3.5450%" y="399.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="3.3143%" y="389" width="0.0155%" height="15" fill="rgb(244,218,35)" fg:x="1716" fg:w="8"/><text x="3.5643%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (17 samples, 0.03%)</title><rect x="3.3722%" y="245" width="0.0328%" height="15" fill="rgb(240,68,47)" fg:x="1746" fg:w="17"/><text x="3.6222%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (16 samples, 0.03%)</title><rect x="3.3742%" y="229" width="0.0309%" height="15" fill="rgb(210,16,53)" fg:x="1747" fg:w="16"/><text x="3.6242%" y="239.50"></text></g><g><title>Metal`0x7ff80e2aa484 (22 samples, 0.04%)</title><rect x="3.3645%" y="277" width="0.0425%" height="15" fill="rgb(235,124,12)" fg:x="1742" fg:w="22"/><text x="3.6145%" y="287.50"></text></g><g><title>Metal`0x7ff80e2aa7af (18 samples, 0.03%)</title><rect x="3.3722%" y="261" width="0.0348%" height="15" fill="rgb(224,169,11)" fg:x="1746" fg:w="18"/><text x="3.6222%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (26 samples, 0.05%)</title><rect x="3.3606%" y="293" width="0.0502%" height="15" fill="rgb(250,166,2)" fg:x="1740" fg:w="26"/><text x="3.6106%" y="303.50"></text></g><g><title>evolu`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (33 samples, 0.06%)</title><rect x="3.3529%" y="325" width="0.0637%" height="15" fill="rgb(242,216,29)" fg:x="1736" fg:w="33"/><text x="3.6029%" y="335.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (31 samples, 0.06%)</title><rect x="3.3568%" y="309" width="0.0599%" height="15" fill="rgb(230,116,27)" fg:x="1738" fg:w="31"/><text x="3.6068%" y="319.50"></text></g><g><title>IOAccelerator`0x7ff80e2828f5 (6 samples, 0.01%)</title><rect x="3.4591%" y="245" width="0.0116%" height="15" fill="rgb(228,99,48)" fg:x="1791" fg:w="6"/><text x="3.7091%" y="255.50"></text></g><g><title>IOKit`0x7ff807e0d773 (259 samples, 0.50%)</title><rect x="3.4727%" y="213" width="0.5002%" height="15" fill="rgb(253,11,6)" fg:x="1798" fg:w="259"/><text x="3.7227%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (256 samples, 0.49%)</title><rect x="3.4784%" y="197" width="0.4944%" height="15" fill="rgb(247,143,39)" fg:x="1801" fg:w="256"/><text x="3.7284%" y="207.50"></text></g><g><title>IOAccelerator`0x7ff80e28297f (265 samples, 0.51%)</title><rect x="3.4727%" y="245" width="0.5118%" height="15" fill="rgb(236,97,10)" fg:x="1798" fg:w="265"/><text x="3.7227%" y="255.50"></text></g><g><title>IOKit`0x7ff807e0d573 (265 samples, 0.51%)</title><rect x="3.4727%" y="229" width="0.5118%" height="15" fill="rgb(233,208,19)" fg:x="1798" fg:w="265"/><text x="3.7227%" y="239.50"></text></g><g><title>CoreFoundation`_CFRelease (284 samples, 0.55%)</title><rect x="3.4514%" y="261" width="0.5485%" height="15" fill="rgb(216,164,2)" fg:x="1787" fg:w="284"/><text x="3.7014%" y="271.50"></text></g><g><title>Metal`0x7ff80e2b0504 (285 samples, 0.55%)</title><rect x="3.4514%" y="277" width="0.5504%" height="15" fill="rgb(220,129,5)" fg:x="1787" fg:w="285"/><text x="3.7014%" y="287.50"></text></g><g><title>Metal`0x7ff80e2aa0c3 (9 samples, 0.02%)</title><rect x="4.0076%" y="261" width="0.0174%" height="15" fill="rgb(242,17,10)" fg:x="2075" fg:w="9"/><text x="4.2576%" y="271.50"></text></g><g><title>Metal`0x7ff80e2b054f (12 samples, 0.02%)</title><rect x="4.0076%" y="277" width="0.0232%" height="15" fill="rgb(242,107,0)" fg:x="2075" fg:w="12"/><text x="4.2576%" y="287.50"></text></g><g><title>Metal`0x7ff80e2b03e1 (307 samples, 0.59%)</title><rect x="3.4456%" y="293" width="0.5929%" height="15" fill="rgb(251,28,31)" fg:x="1784" fg:w="307"/><text x="3.6956%" y="303.50"></text></g><g><title>evolu`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (312 samples, 0.60%)</title><rect x="3.4379%" y="309" width="0.6026%" height="15" fill="rgb(233,223,10)" fg:x="1780" fg:w="312"/><text x="3.6879%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::terminate (7 samples, 0.01%)</title><rect x="4.0463%" y="261" width="0.0135%" height="15" fill="rgb(215,21,27)" fg:x="2095" fg:w="7"/><text x="4.2963%" y="271.50"></text></g><g><title>Metal`0x7ff80e2aa0c3 (6 samples, 0.01%)</title><rect x="4.0752%" y="229" width="0.0116%" height="15" fill="rgb(232,23,21)" fg:x="2110" fg:w="6"/><text x="4.3252%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="4.0752%" y="213" width="0.0116%" height="15" fill="rgb(244,5,23)" fg:x="2110" fg:w="6"/><text x="4.3252%" y="223.50"></text></g><g><title>Metal`0x7ff80e2abdc8 (13 samples, 0.03%)</title><rect x="4.0637%" y="261" width="0.0251%" height="15" fill="rgb(226,81,46)" fg:x="2104" fg:w="13"/><text x="4.3137%" y="271.50"></text></g><g><title>Metal`0x7ff80e2abfe9 (12 samples, 0.02%)</title><rect x="4.0656%" y="245" width="0.0232%" height="15" fill="rgb(247,70,30)" fg:x="2105" fg:w="12"/><text x="4.3156%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (29 samples, 0.06%)</title><rect x="4.0443%" y="277" width="0.0560%" height="15" fill="rgb(212,68,19)" fg:x="2094" fg:w="29"/><text x="4.2943%" y="287.50"></text></g><g><title>evolu`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.06%)</title><rect x="4.0424%" y="293" width="0.0618%" height="15" fill="rgb(240,187,13)" fg:x="2093" fg:w="32"/><text x="4.2924%" y="303.50"></text></g><g><title>evolu`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (38 samples, 0.07%)</title><rect x="4.0405%" y="309" width="0.0734%" height="15" fill="rgb(223,113,26)" fg:x="2092" fg:w="38"/><text x="4.2905%" y="319.50"></text></g><g><title>evolu`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (8 samples, 0.02%)</title><rect x="4.1139%" y="309" width="0.0155%" height="15" fill="rgb(206,192,2)" fg:x="2130" fg:w="8"/><text x="4.3639%" y="319.50"></text></g><g><title>evolu`wgpu_core::device::Device&lt;A&gt;::maintain (362 samples, 0.70%)</title><rect x="3.4321%" y="325" width="0.6992%" height="15" fill="rgb(241,108,4)" fg:x="1777" fg:w="362"/><text x="3.6821%" y="335.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (8 samples, 0.02%)</title><rect x="4.1583%" y="325" width="0.0155%" height="15" fill="rgb(247,173,49)" fg:x="2153" fg:w="8"/><text x="4.4083%" y="335.50"></text></g><g><title>evolu`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (439 samples, 0.85%)</title><rect x="3.3336%" y="341" width="0.8479%" height="15" fill="rgb(224,114,35)" fg:x="1726" fg:w="439"/><text x="3.5836%" y="351.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (442 samples, 0.85%)</title><rect x="3.3297%" y="357" width="0.8537%" height="15" fill="rgb(245,159,27)" fg:x="1724" fg:w="442"/><text x="3.5797%" y="367.50"></text></g><g><title>evolu`nannou::frame::raw::RawFrame::submit_inner (6 samples, 0.01%)</title><rect x="4.1853%" y="357" width="0.0116%" height="15" fill="rgb(245,172,44)" fg:x="2167" fg:w="6"/><text x="4.4353%" y="367.50"></text></g><g><title>evolu`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (6 samples, 0.01%)</title><rect x="4.2047%" y="309" width="0.0116%" height="15" fill="rgb(236,23,11)" fg:x="2177" fg:w="6"/><text x="4.4547%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (14 samples, 0.03%)</title><rect x="4.2240%" y="229" width="0.0270%" height="15" fill="rgb(205,117,38)" fg:x="2187" fg:w="14"/><text x="4.4740%" y="239.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (19 samples, 0.04%)</title><rect x="4.2182%" y="245" width="0.0367%" height="15" fill="rgb(237,72,25)" fg:x="2184" fg:w="19"/><text x="4.4682%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (21 samples, 0.04%)</title><rect x="4.2162%" y="261" width="0.0406%" height="15" fill="rgb(244,70,9)" fg:x="2183" fg:w="21"/><text x="4.4662%" y="271.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (22 samples, 0.04%)</title><rect x="4.2162%" y="277" width="0.0425%" height="15" fill="rgb(217,125,39)" fg:x="2183" fg:w="22"/><text x="4.4662%" y="287.50"></text></g><g><title>evolu`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (25 samples, 0.05%)</title><rect x="4.2162%" y="309" width="0.0483%" height="15" fill="rgb(235,36,10)" fg:x="2183" fg:w="25"/><text x="4.4662%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (25 samples, 0.05%)</title><rect x="4.2162%" y="293" width="0.0483%" height="15" fill="rgb(251,123,47)" fg:x="2183" fg:w="25"/><text x="4.4662%" y="303.50"></text></g><g><title>evolu`nannou_wgpu::resolve_texture (40 samples, 0.08%)</title><rect x="4.1969%" y="357" width="0.0773%" height="15" fill="rgb(221,13,13)" fg:x="2173" fg:w="40"/><text x="4.4469%" y="367.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (40 samples, 0.08%)</title><rect x="4.1969%" y="341" width="0.0773%" height="15" fill="rgb(238,131,9)" fg:x="2173" fg:w="40"/><text x="4.4469%" y="351.50"></text></g><g><title>evolu`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (40 samples, 0.08%)</title><rect x="4.1969%" y="325" width="0.0773%" height="15" fill="rgb(211,50,8)" fg:x="2173" fg:w="40"/><text x="4.4469%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawPrimitives:vertexStart:vertexCount:] (6 samples, 0.01%)</title><rect x="4.2761%" y="309" width="0.0116%" height="15" fill="rgb(245,182,24)" fg:x="2214" fg:w="6"/><text x="4.5261%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawPrimitives (6 samples, 0.01%)</title><rect x="4.2761%" y="293" width="0.0116%" height="15" fill="rgb(242,14,37)" fg:x="2214" fg:w="6"/><text x="4.5261%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (6 samples, 0.01%)</title><rect x="4.2761%" y="277" width="0.0116%" height="15" fill="rgb(246,228,12)" fg:x="2214" fg:w="6"/><text x="4.5261%" y="287.50"></text></g><g><title>evolu`wgpu_core::command::CommandEncoder&lt;A&gt;::open (6 samples, 0.01%)</title><rect x="4.2954%" y="309" width="0.0116%" height="15" fill="rgb(213,55,15)" fg:x="2224" fg:w="6"/><text x="4.5454%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (6 samples, 0.01%)</title><rect x="4.2954%" y="293" width="0.0116%" height="15" fill="rgb(209,9,3)" fg:x="2224" fg:w="6"/><text x="4.5454%" y="303.50"></text></g><g><title>evolu`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (10 samples, 0.02%)</title><rect x="4.3089%" y="309" width="0.0193%" height="15" fill="rgb(230,59,30)" fg:x="2231" fg:w="10"/><text x="4.5589%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (8 samples, 0.02%)</title><rect x="4.3128%" y="293" width="0.0155%" height="15" fill="rgb(209,121,21)" fg:x="2233" fg:w="8"/><text x="4.5628%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (8 samples, 0.02%)</title><rect x="4.3128%" y="277" width="0.0155%" height="15" fill="rgb(220,109,13)" fg:x="2233" fg:w="8"/><text x="4.5628%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (7 samples, 0.01%)</title><rect x="4.3437%" y="181" width="0.0135%" height="15" fill="rgb(232,18,1)" fg:x="2249" fg:w="7"/><text x="4.5937%" y="191.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (11 samples, 0.02%)</title><rect x="4.3437%" y="197" width="0.0212%" height="15" fill="rgb(215,41,42)" fg:x="2249" fg:w="11"/><text x="4.5937%" y="207.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (16 samples, 0.03%)</title><rect x="4.3437%" y="213" width="0.0309%" height="15" fill="rgb(224,123,36)" fg:x="2249" fg:w="16"/><text x="4.5937%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (11 samples, 0.02%)</title><rect x="4.3765%" y="197" width="0.0212%" height="15" fill="rgb(240,125,3)" fg:x="2266" fg:w="11"/><text x="4.6265%" y="207.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (13 samples, 0.03%)</title><rect x="4.3746%" y="213" width="0.0251%" height="15" fill="rgb(205,98,50)" fg:x="2265" fg:w="13"/><text x="4.6246%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (36 samples, 0.07%)</title><rect x="4.3321%" y="261" width="0.0695%" height="15" fill="rgb(205,185,37)" fg:x="2243" fg:w="36"/><text x="4.5821%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (35 samples, 0.07%)</title><rect x="4.3341%" y="245" width="0.0676%" height="15" fill="rgb(238,207,15)" fg:x="2244" fg:w="35"/><text x="4.5841%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (30 samples, 0.06%)</title><rect x="4.3437%" y="229" width="0.0579%" height="15" fill="rgb(213,199,42)" fg:x="2249" fg:w="30"/><text x="4.5937%" y="239.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (41 samples, 0.08%)</title><rect x="4.3321%" y="277" width="0.0792%" height="15" fill="rgb(235,201,11)" fg:x="2243" fg:w="41"/><text x="4.5821%" y="287.50"></text></g><g><title>evolu`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (45 samples, 0.09%)</title><rect x="4.3283%" y="309" width="0.0869%" height="15" fill="rgb(207,46,11)" fg:x="2241" fg:w="45"/><text x="4.5783%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (43 samples, 0.08%)</title><rect x="4.3321%" y="293" width="0.0831%" height="15" fill="rgb(241,35,35)" fg:x="2243" fg:w="43"/><text x="4.5821%" y="303.50"></text></g><g><title>evolu`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (80 samples, 0.15%)</title><rect x="4.2761%" y="325" width="0.1545%" height="15" fill="rgb(243,32,47)" fg:x="2214" fg:w="80"/><text x="4.5261%" y="335.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (82 samples, 0.16%)</title><rect x="4.2742%" y="341" width="0.1584%" height="15" fill="rgb(247,202,23)" fg:x="2213" fg:w="82"/><text x="4.5242%" y="351.50"></text></g><g><title>evolu`nannou_wgpu::texture::reshaper::Reshaper::encode_render_pass (85 samples, 0.16%)</title><rect x="4.2742%" y="357" width="0.1642%" height="15" fill="rgb(219,102,11)" fg:x="2213" fg:w="85"/><text x="4.5242%" y="367.50"></text></g><g><title>evolu`nannou::frame::Frame::submit_inner (575 samples, 1.11%)</title><rect x="3.3297%" y="373" width="1.1106%" height="15" fill="rgb(243,110,44)" fg:x="1724" fg:w="575"/><text x="3.5797%" y="383.50"></text></g><g><title>evolu`core::ptr::drop_in_place&lt;nannou::frame::Frame&gt; (577 samples, 1.11%)</title><rect x="3.3297%" y="389" width="1.1144%" height="15" fill="rgb(222,74,54)" fg:x="1724" fg:w="577"/><text x="3.5797%" y="399.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="4.4441%" y="389" width="0.0116%" height="15" fill="rgb(216,99,12)" fg:x="2301" fg:w="6"/><text x="4.6941%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelEncoderBase::getStateHeaps (13 samples, 0.03%)</title><rect x="4.5426%" y="213" width="0.0251%" height="15" fill="rgb(226,22,26)" fg:x="2352" fg:w="13"/><text x="4.7926%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (13 samples, 0.03%)</title><rect x="4.5426%" y="197" width="0.0251%" height="15" fill="rgb(217,163,10)" fg:x="2352" fg:w="13"/><text x="4.7926%" y="207.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::acquireHeap (12 samples, 0.02%)</title><rect x="4.5446%" y="181" width="0.0232%" height="15" fill="rgb(213,25,53)" fg:x="2353" fg:w="12"/><text x="4.7946%" y="191.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGBL::blit3d_prepare_commands (12 samples, 0.02%)</title><rect x="4.5697%" y="213" width="0.0232%" height="15" fill="rgb(252,105,26)" fg:x="2366" fg:w="12"/><text x="4.8197%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::programBlit (45 samples, 0.09%)</title><rect x="4.5214%" y="229" width="0.0869%" height="15" fill="rgb(220,39,43)" fg:x="2341" fg:w="45"/><text x="4.7714%" y="239.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (54 samples, 0.10%)</title><rect x="4.5175%" y="277" width="0.1043%" height="15" fill="rgb(229,68,48)" fg:x="2339" fg:w="54"/><text x="4.7675%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBuffer (52 samples, 0.10%)</title><rect x="4.5214%" y="261" width="0.1004%" height="15" fill="rgb(252,8,32)" fg:x="2341" fg:w="52"/><text x="4.7714%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::copyBufferToBufferInternal (52 samples, 0.10%)</title><rect x="4.5214%" y="245" width="0.1004%" height="15" fill="rgb(223,20,43)" fg:x="2341" fg:w="52"/><text x="4.7714%" y="255.50"></text></g><g><title>evolu`metal::encoder::BlitCommandEncoderRef::copy_from_buffer (55 samples, 0.11%)</title><rect x="4.5175%" y="293" width="0.1062%" height="15" fill="rgb(229,81,49)" fg:x="2339" fg:w="55"/><text x="4.7675%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBufferWithUnretainedReferences] (13 samples, 0.03%)</title><rect x="4.6315%" y="261" width="0.0251%" height="15" fill="rgb(236,28,36)" fg:x="2398" fg:w="13"/><text x="4.8815%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (13 samples, 0.03%)</title><rect x="4.6315%" y="245" width="0.0251%" height="15" fill="rgb(249,185,26)" fg:x="2398" fg:w="13"/><text x="4.8815%" y="255.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (18 samples, 0.03%)</title><rect x="4.6238%" y="293" width="0.0348%" height="15" fill="rgb(249,174,33)" fg:x="2394" fg:w="18"/><text x="4.8738%" y="303.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (14 samples, 0.03%)</title><rect x="4.6315%" y="277" width="0.0270%" height="15" fill="rgb(233,201,37)" fg:x="2398" fg:w="14"/><text x="4.8815%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelBlitCommandEncoder::beginEncoding (7 samples, 0.01%)</title><rect x="4.6663%" y="229" width="0.0135%" height="15" fill="rgb(221,78,26)" fg:x="2416" fg:w="7"/><text x="4.9163%" y="239.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBlitCommandEncoder initWithCommandBuffer:stateDescriptor:] (12 samples, 0.02%)</title><rect x="4.6624%" y="245" width="0.0232%" height="15" fill="rgb(250,127,30)" fg:x="2414" fg:w="12"/><text x="4.9124%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer blitCommandEncoder] (17 samples, 0.03%)</title><rect x="4.6624%" y="261" width="0.0328%" height="15" fill="rgb(230,49,44)" fg:x="2414" fg:w="17"/><text x="4.9124%" y="271.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (97 samples, 0.19%)</title><rect x="4.5098%" y="325" width="0.1873%" height="15" fill="rgb(229,67,23)" fg:x="2335" fg:w="97"/><text x="4.7598%" y="335.50"></text></g><g><title>evolu`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (97 samples, 0.19%)</title><rect x="4.5098%" y="309" width="0.1873%" height="15" fill="rgb(249,83,47)" fg:x="2335" fg:w="97"/><text x="4.7598%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (20 samples, 0.04%)</title><rect x="4.6585%" y="293" width="0.0386%" height="15" fill="rgb(215,43,3)" fg:x="2412" fg:w="20"/><text x="4.9085%" y="303.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (20 samples, 0.04%)</title><rect x="4.6585%" y="277" width="0.0386%" height="15" fill="rgb(238,154,13)" fg:x="2412" fg:w="20"/><text x="4.9085%" y="287.50"></text></g><g><title>Metal`0x7ff80e291710 (8 samples, 0.02%)</title><rect x="4.7474%" y="181" width="0.0155%" height="15" fill="rgb(219,56,2)" fg:x="2458" fg:w="8"/><text x="4.9974%" y="191.50"></text></g><g><title>IOAccelerator`0x7ff80e281efa (6 samples, 0.01%)</title><rect x="4.7725%" y="149" width="0.0116%" height="15" fill="rgb(233,0,4)" fg:x="2471" fg:w="6"/><text x="5.0225%" y="159.50"></text></g><g><title>IOAccelerator`0x7ff80e282259 (9 samples, 0.02%)</title><rect x="4.7706%" y="165" width="0.0174%" height="15" fill="rgb(235,30,7)" fg:x="2470" fg:w="9"/><text x="5.0206%" y="175.50"></text></g><g><title>IOKit`0x7ff807e0d773 (1,699 samples, 3.28%)</title><rect x="4.8015%" y="133" width="3.2814%" height="15" fill="rgb(250,79,13)" fg:x="2486" fg:w="1699"/><text x="5.0515%" y="143.50">IOK..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,697 samples, 3.28%)</title><rect x="4.8053%" y="117" width="3.2776%" height="15" fill="rgb(211,146,34)" fg:x="2488" fg:w="1697"/><text x="5.0553%" y="127.50">lib..</text></g><g><title>IOAccelerator`0x7ff80e28228f (1,717 samples, 3.32%)</title><rect x="4.7879%" y="165" width="3.3162%" height="15" fill="rgb(228,22,38)" fg:x="2479" fg:w="1717"/><text x="5.0379%" y="175.50">IOA..</text></g><g><title>IOKit`0x7ff807e0d5ad (1,715 samples, 3.31%)</title><rect x="4.7918%" y="149" width="3.3123%" height="15" fill="rgb(235,168,5)" fg:x="2481" fg:w="1715"/><text x="5.0418%" y="159.50">IOK..</text></g><g><title>Metal`0x7ff80e2918b4 (1,793 samples, 3.46%)</title><rect x="4.7667%" y="181" width="3.4630%" height="15" fill="rgb(221,155,16)" fg:x="2468" fg:w="1793"/><text x="5.0167%" y="191.50">Met..</text></g><g><title>IOAccelerator`0x7ff80e28236d (63 samples, 0.12%)</title><rect x="8.1080%" y="165" width="0.1217%" height="15" fill="rgb(215,215,53)" fg:x="4198" fg:w="63"/><text x="8.3580%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (63 samples, 0.12%)</title><rect x="8.1080%" y="149" width="0.1217%" height="15" fill="rgb(223,4,10)" fg:x="4198" fg:w="63"/><text x="8.3580%" y="159.50"></text></g><g><title>Metal`0x7ff80e33c401 (1,811 samples, 3.50%)</title><rect x="4.7454%" y="213" width="3.4978%" height="15" fill="rgb(234,103,6)" fg:x="2457" fg:w="1811"/><text x="4.9954%" y="223.50">Met..</text></g><g><title>Metal`0x7ff80e291689 (1,811 samples, 3.50%)</title><rect x="4.7454%" y="197" width="3.4978%" height="15" fill="rgb(227,97,0)" fg:x="2457" fg:w="1811"/><text x="4.9954%" y="207.50">Met..</text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (1,813 samples, 3.50%)</title><rect x="4.7435%" y="245" width="3.5016%" height="15" fill="rgb(234,150,53)" fg:x="2456" fg:w="1813"/><text x="4.9935%" y="255.50">App..</text></g><g><title>Metal`0x7ff80e2915fe (1,812 samples, 3.50%)</title><rect x="4.7454%" y="229" width="3.4997%" height="15" fill="rgb(228,201,54)" fg:x="2457" fg:w="1812"/><text x="4.9954%" y="239.50">Met..</text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelDevice newBufferWithLength:options:] (1,826 samples, 3.53%)</title><rect x="4.7377%" y="261" width="3.5267%" height="15" fill="rgb(222,22,37)" fg:x="2453" fg:w="1826"/><text x="4.9877%" y="271.50">App..</text></g><g><title>CoreFoundation`CFStringCreateWithBytes (14 samples, 0.03%)</title><rect x="8.2722%" y="229" width="0.0270%" height="15" fill="rgb(237,53,32)" fg:x="4283" fg:w="14"/><text x="8.5222%" y="239.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (13 samples, 0.03%)</title><rect x="8.2741%" y="213" width="0.0251%" height="15" fill="rgb(233,25,53)" fg:x="4284" fg:w="13"/><text x="8.5241%" y="223.50"></text></g><g><title>evolu`metal::nsstring_from_str (17 samples, 0.03%)</title><rect x="8.2702%" y="245" width="0.0328%" height="15" fill="rgb(210,40,34)" fg:x="4282" fg:w="17"/><text x="8.5202%" y="255.50"></text></g><g><title>evolu`metal::resource::ResourceRef::set_label (26 samples, 0.05%)</title><rect x="8.2683%" y="261" width="0.0502%" height="15" fill="rgb(241,220,44)" fg:x="4281" fg:w="26"/><text x="8.5183%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.01%)</title><rect x="8.3050%" y="245" width="0.0135%" height="15" fill="rgb(235,28,35)" fg:x="4300" fg:w="7"/><text x="8.5550%" y="255.50"></text></g><g><title>evolu`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (1,860 samples, 3.59%)</title><rect x="4.7300%" y="277" width="3.5924%" height="15" fill="rgb(210,56,17)" fg:x="2449" fg:w="1860"/><text x="4.9800%" y="287.50">evol..</text></g><g><title>evolu`wgpu_core::device::Device&lt;A&gt;::create_buffer (1,872 samples, 3.62%)</title><rect x="4.7165%" y="293" width="3.6156%" height="15" fill="rgb(224,130,29)" fg:x="2442" fg:w="1872"/><text x="4.9665%" y="303.50">evol..</text></g><g><title>evolu`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1,968 samples, 3.80%)</title><rect x="4.7030%" y="309" width="3.8010%" height="15" fill="rgb(235,212,8)" fg:x="2435" fg:w="1968"/><text x="4.9530%" y="319.50">evol..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (83 samples, 0.16%)</title><rect x="8.3436%" y="293" width="0.1603%" height="15" fill="rgb(223,33,50)" fg:x="4320" fg:w="83"/><text x="8.5936%" y="303.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1,973 samples, 3.81%)</title><rect x="4.6972%" y="325" width="3.8106%" height="15" fill="rgb(219,149,13)" fg:x="2432" fg:w="1973"/><text x="4.9472%" y="335.50">evol..</text></g><g><title>evolu`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2,244 samples, 4.33%)</title><rect x="4.5021%" y="341" width="4.3341%" height="15" fill="rgb(250,156,29)" fg:x="2331" fg:w="2244"/><text x="4.7521%" y="351.50">evolu..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (162 samples, 0.31%)</title><rect x="8.5233%" y="325" width="0.3129%" height="15" fill="rgb(216,193,19)" fg:x="4413" fg:w="162"/><text x="8.7733%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programPipeline (10 samples, 0.02%)</title><rect x="8.8767%" y="261" width="0.0193%" height="15" fill="rgb(216,135,14)" fg:x="4596" fg:w="10"/><text x="9.1267%" y="271.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::drawIndexedPrimitives (13 samples, 0.03%)</title><rect x="8.8728%" y="277" width="0.0251%" height="15" fill="rgb(241,47,5)" fg:x="4594" fg:w="13"/><text x="9.1228%" y="287.50"></text></g><g><title>evolu`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives (16 samples, 0.03%)</title><rect x="8.8690%" y="309" width="0.0309%" height="15" fill="rgb(233,42,35)" fg:x="4592" fg:w="16"/><text x="9.1190%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (16 samples, 0.03%)</title><rect x="8.8690%" y="293" width="0.0309%" height="15" fill="rgb(231,13,6)" fg:x="4592" fg:w="16"/><text x="9.1190%" y="303.50"></text></g><g><title>evolu`wgpu_core::command::CommandEncoder&lt;A&gt;::open (7 samples, 0.01%)</title><rect x="8.9115%" y="309" width="0.0135%" height="15" fill="rgb(207,181,40)" fg:x="4614" fg:w="7"/><text x="9.1615%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (7 samples, 0.01%)</title><rect x="8.9115%" y="293" width="0.0135%" height="15" fill="rgb(254,173,49)" fg:x="4614" fg:w="7"/><text x="9.1615%" y="303.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (6 samples, 0.01%)</title><rect x="8.9134%" y="277" width="0.0116%" height="15" fill="rgb(221,1,38)" fg:x="4615" fg:w="6"/><text x="9.1634%" y="287.50"></text></g><g><title>evolu`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (28 samples, 0.05%)</title><rect x="8.9269%" y="309" width="0.0541%" height="15" fill="rgb(206,124,46)" fg:x="4622" fg:w="28"/><text x="9.1769%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (18 samples, 0.03%)</title><rect x="8.9462%" y="293" width="0.0348%" height="15" fill="rgb(249,21,11)" fg:x="4632" fg:w="18"/><text x="9.1962%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder endEncoding] (17 samples, 0.03%)</title><rect x="8.9482%" y="277" width="0.0328%" height="15" fill="rgb(222,201,40)" fg:x="4633" fg:w="17"/><text x="9.1982%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::IGAccelRenderCommandEncoder (9 samples, 0.02%)</title><rect x="8.9945%" y="229" width="0.0174%" height="15" fill="rgb(235,61,29)" fg:x="4657" fg:w="9"/><text x="9.2445%" y="239.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::programClearPipeline (7 samples, 0.01%)</title><rect x="9.0254%" y="181" width="0.0135%" height="15" fill="rgb(219,207,3)" fg:x="4673" fg:w="7"/><text x="9.2754%" y="191.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::processActions (11 samples, 0.02%)</title><rect x="9.0254%" y="197" width="0.0212%" height="15" fill="rgb(222,56,46)" fg:x="4673" fg:w="11"/><text x="9.2754%" y="207.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGRenderPass::initWithDescriptor (12 samples, 0.02%)</title><rect x="9.0467%" y="197" width="0.0232%" height="15" fill="rgb(239,76,54)" fg:x="4684" fg:w="12"/><text x="9.2967%" y="207.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initializeRenderPassState (26 samples, 0.05%)</title><rect x="9.0216%" y="213" width="0.0502%" height="15" fill="rgb(231,124,27)" fg:x="4671" fg:w="26"/><text x="9.2716%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IntelStateHeaps::initialize (6 samples, 0.01%)</title><rect x="9.0756%" y="213" width="0.0116%" height="15" fill="rgb(249,195,6)" fg:x="4699" fg:w="6"/><text x="9.3256%" y="223.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`IGAccelRenderCommandEncoder::initialize (42 samples, 0.08%)</title><rect x="9.0119%" y="229" width="0.0811%" height="15" fill="rgb(237,174,47)" fg:x="4666" fg:w="42"/><text x="9.2619%" y="239.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelRenderCommandEncoder initWithCommandBuffer:descriptor:stateDescriptor:] (53 samples, 0.10%)</title><rect x="8.9926%" y="245" width="0.1024%" height="15" fill="rgb(206,201,31)" fg:x="4656" fg:w="53"/><text x="9.2426%" y="255.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer renderCommandEncoderWithDescriptor:] (57 samples, 0.11%)</title><rect x="8.9887%" y="261" width="0.1101%" height="15" fill="rgb(231,57,52)" fg:x="4654" fg:w="57"/><text x="9.2387%" y="271.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (76 samples, 0.15%)</title><rect x="8.9887%" y="277" width="0.1468%" height="15" fill="rgb(248,177,22)" fg:x="4654" fg:w="76"/><text x="9.2387%" y="287.50"></text></g><g><title>evolu`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (81 samples, 0.16%)</title><rect x="8.9810%" y="309" width="0.1564%" height="15" fill="rgb(215,211,37)" fg:x="4650" fg:w="81"/><text x="9.2310%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (78 samples, 0.15%)</title><rect x="8.9868%" y="293" width="0.1506%" height="15" fill="rgb(241,128,51)" fg:x="4653" fg:w="78"/><text x="9.2368%" y="303.50"></text></g><g><title>evolu`wgpu_core::track::StatefulTrackerSubset::merge_extend (6 samples, 0.01%)</title><rect x="9.1452%" y="309" width="0.0116%" height="15" fill="rgb(227,165,31)" fg:x="4735" fg:w="6"/><text x="9.3952%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (6 samples, 0.01%)</title><rect x="9.1568%" y="309" width="0.0116%" height="15" fill="rgb(228,167,24)" fg:x="4741" fg:w="6"/><text x="9.4068%" y="319.50"></text></g><g><title>evolu`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (8 samples, 0.02%)</title><rect x="9.1703%" y="309" width="0.0155%" height="15" fill="rgb(228,143,12)" fg:x="4748" fg:w="8"/><text x="9.4203%" y="319.50"></text></g><g><title>evolu`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (184 samples, 0.36%)</title><rect x="8.8361%" y="325" width="0.3554%" height="15" fill="rgb(249,149,8)" fg:x="4575" fg:w="184"/><text x="9.0861%" y="335.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (185 samples, 0.36%)</title><rect x="8.8361%" y="341" width="0.3573%" height="15" fill="rgb(243,35,44)" fg:x="4575" fg:w="185"/><text x="9.0861%" y="351.50"></text></g><g><title>evolu`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="9.6396%" y="325" width="0.0232%" height="15" fill="rgb(246,89,9)" fg:x="4991" fg:w="12"/><text x="9.8896%" y="335.50"></text></g><g><title>evolu`__rdl_realloc (11 samples, 0.02%)</title><rect x="10.0297%" y="261" width="0.0212%" height="15" fill="rgb(233,213,13)" fg:x="5193" fg:w="11"/><text x="10.2797%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (57 samples, 0.11%)</title><rect x="10.0549%" y="261" width="0.1101%" height="15" fill="rgb(233,141,41)" fg:x="5206" fg:w="57"/><text x="10.3049%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (42 samples, 0.08%)</title><rect x="10.2325%" y="229" width="0.0811%" height="15" fill="rgb(239,167,4)" fg:x="5298" fg:w="42"/><text x="10.4825%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (70 samples, 0.14%)</title><rect x="10.2074%" y="245" width="0.1352%" height="15" fill="rgb(209,217,16)" fg:x="5285" fg:w="70"/><text x="10.4574%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (15 samples, 0.03%)</title><rect x="10.3137%" y="229" width="0.0290%" height="15" fill="rgb(219,88,35)" fg:x="5340" fg:w="15"/><text x="10.5637%" y="239.50"></text></g><g><title>evolu`alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (170 samples, 0.33%)</title><rect x="10.0162%" y="277" width="0.3283%" height="15" fill="rgb(220,193,23)" fg:x="5186" fg:w="170"/><text x="10.2662%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (93 samples, 0.18%)</title><rect x="10.1649%" y="261" width="0.1796%" height="15" fill="rgb(230,90,52)" fg:x="5263" fg:w="93"/><text x="10.4149%" y="271.50"></text></g><g><title>evolu`&lt;lyon_path::path::Builder as lyon_path::builder::Build&gt;::build (195 samples, 0.38%)</title><rect x="9.9737%" y="293" width="0.3766%" height="15" fill="rgb(252,106,19)" fg:x="5164" fg:w="195"/><text x="10.2237%" y="303.50"></text></g><g><title>evolu`alloc::raw_vec::finish_grow (134 samples, 0.26%)</title><rect x="10.4025%" y="261" width="0.2588%" height="15" fill="rgb(206,74,20)" fg:x="5386" fg:w="134"/><text x="10.6525%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (125 samples, 0.24%)</title><rect x="10.4199%" y="245" width="0.2414%" height="15" fill="rgb(230,138,44)" fg:x="5395" fg:w="125"/><text x="10.6699%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.03%)</title><rect x="10.6613%" y="261" width="0.0251%" height="15" fill="rgb(235,182,43)" fg:x="5520" fg:w="13"/><text x="10.9113%" y="271.50"></text></g><g><title>evolu`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (181 samples, 0.35%)</title><rect x="10.3658%" y="277" width="0.3496%" height="15" fill="rgb(242,16,51)" fg:x="5367" fg:w="181"/><text x="10.6158%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.03%)</title><rect x="10.6864%" y="261" width="0.0290%" height="15" fill="rgb(248,9,4)" fg:x="5533" fg:w="15"/><text x="10.9364%" y="271.50"></text></g><g><title>evolu`&lt;lyon_path::path::Builder as lyon_path::builder::PathBuilder&gt;::begin (191 samples, 0.37%)</title><rect x="10.3504%" y="293" width="0.3689%" height="15" fill="rgb(210,31,22)" fg:x="5359" fg:w="191"/><text x="10.6004%" y="303.50"></text></g><g><title>evolu`&lt;lyon_path::path::Builder as lyon_path::builder::PathBuilder&gt;::line_to (6 samples, 0.01%)</title><rect x="10.7270%" y="293" width="0.0116%" height="15" fill="rgb(239,54,39)" fg:x="5554" fg:w="6"/><text x="10.9770%" y="303.50"></text></g><g><title>evolu`__rdl_realloc (14 samples, 0.03%)</title><rect x="11.5169%" y="229" width="0.0270%" height="15" fill="rgb(230,99,41)" fg:x="5963" fg:w="14"/><text x="11.7669%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (70 samples, 0.14%)</title><rect x="11.5459%" y="229" width="0.1352%" height="15" fill="rgb(253,106,12)" fg:x="5978" fg:w="70"/><text x="11.7959%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (9 samples, 0.02%)</title><rect x="11.7468%" y="213" width="0.0174%" height="15" fill="rgb(213,46,41)" fg:x="6082" fg:w="9"/><text x="11.9968%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (85 samples, 0.16%)</title><rect x="11.8201%" y="197" width="0.1642%" height="15" fill="rgb(215,133,35)" fg:x="6120" fg:w="85"/><text x="12.0701%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (141 samples, 0.27%)</title><rect x="12.0384%" y="181" width="0.2723%" height="15" fill="rgb(213,28,5)" fg:x="6233" fg:w="141"/><text x="12.2884%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="12.2933%" y="165" width="0.0174%" height="15" fill="rgb(215,77,49)" fg:x="6365" fg:w="9"/><text x="12.5433%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (139 samples, 0.27%)</title><rect x="12.3107%" y="181" width="0.2685%" height="15" fill="rgb(248,100,22)" fg:x="6374" fg:w="139"/><text x="12.5607%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (324 samples, 0.63%)</title><rect x="11.9843%" y="197" width="0.6258%" height="15" fill="rgb(208,67,9)" fg:x="6205" fg:w="324"/><text x="12.2343%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.03%)</title><rect x="12.5850%" y="181" width="0.0251%" height="15" fill="rgb(219,133,21)" fg:x="6516" fg:w="13"/><text x="12.8350%" y="191.50"></text></g><g><title>evolu`alloc::raw_vec::finish_grow (594 samples, 1.15%)</title><rect x="11.4822%" y="245" width="1.1472%" height="15" fill="rgb(246,46,29)" fg:x="5945" fg:w="594"/><text x="11.7322%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (491 samples, 0.95%)</title><rect x="11.6811%" y="229" width="0.9483%" height="15" fill="rgb(246,185,52)" fg:x="6048" fg:w="491"/><text x="11.9311%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (448 samples, 0.87%)</title><rect x="11.7641%" y="213" width="0.8653%" height="15" fill="rgb(252,136,11)" fg:x="6091" fg:w="448"/><text x="12.0141%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="12.6140%" y="197" width="0.0155%" height="15" fill="rgb(219,138,53)" fg:x="6531" fg:w="8"/><text x="12.8640%" y="207.50"></text></g><g><title>evolu`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (621 samples, 1.20%)</title><rect x="11.4339%" y="261" width="1.1994%" height="15" fill="rgb(211,51,23)" fg:x="5920" fg:w="621"/><text x="11.6839%" y="271.50"></text></g><g><title>evolu`lyon_geom::arc::arc_to_quadratic_beziers (972 samples, 1.88%)</title><rect x="10.7579%" y="293" width="1.8773%" height="15" fill="rgb(247,221,28)" fg:x="5570" fg:w="972"/><text x="11.0079%" y="303.50">e..</text></g><g><title>evolu`&lt;lyon_path::path::Builder as lyon_path::builder::PathBuilder&gt;::quadratic_bezier_to (678 samples, 1.31%)</title><rect x="11.3257%" y="277" width="1.3095%" height="15" fill="rgb(251,222,45)" fg:x="5864" fg:w="678"/><text x="11.5757%" y="287.50"></text></g><g><title>evolu`&lt;lyon_path::path::Iter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="12.9326%" y="245" width="0.0232%" height="15" fill="rgb(217,162,53)" fg:x="6696" fg:w="12"/><text x="13.1826%" y="255.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;nannou::draw::mesh::builder::SingleColor&gt; as lyon_tessellation::geometry_builder::FillGeometryBuilder&gt;::add_fill_vertex (22 samples, 0.04%)</title><rect x="12.9693%" y="245" width="0.0425%" height="15" fill="rgb(229,93,14)" fg:x="6715" fg:w="22"/><text x="13.2193%" y="255.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueue::into_builder (14 samples, 0.03%)</title><rect x="13.0118%" y="245" width="0.0270%" height="15" fill="rgb(209,67,49)" fg:x="6737" fg:w="14"/><text x="13.2618%" y="255.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueueBuilder::build (756 samples, 1.46%)</title><rect x="13.0504%" y="245" width="1.4601%" height="15" fill="rgb(213,87,29)" fg:x="6757" fg:w="756"/><text x="13.3004%" y="255.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueue::merge_sort (737 samples, 1.42%)</title><rect x="13.0871%" y="229" width="1.4234%" height="15" fill="rgb(205,151,52)" fg:x="6776" fg:w="737"/><text x="13.3371%" y="239.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueue::merge_sort (636 samples, 1.23%)</title><rect x="13.2822%" y="213" width="1.2284%" height="15" fill="rgb(253,215,39)" fg:x="6877" fg:w="636"/><text x="13.5322%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueue::merge_sort (503 samples, 0.97%)</title><rect x="13.5391%" y="197" width="0.9715%" height="15" fill="rgb(221,220,41)" fg:x="7010" fg:w="503"/><text x="13.7891%" y="207.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueue::merge_sort (392 samples, 0.76%)</title><rect x="13.7535%" y="181" width="0.7571%" height="15" fill="rgb(218,133,21)" fg:x="7121" fg:w="392"/><text x="14.0035%" y="191.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueue::merge_sort (263 samples, 0.51%)</title><rect x="14.0026%" y="165" width="0.5080%" height="15" fill="rgb(221,193,43)" fg:x="7250" fg:w="263"/><text x="14.2526%" y="175.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueue::merge_sort (84 samples, 0.16%)</title><rect x="14.3483%" y="149" width="0.1622%" height="15" fill="rgb(240,128,52)" fg:x="7429" fg:w="84"/><text x="14.5983%" y="159.50"></text></g><g><title>evolu`&lt;lyon_path::path::Iter as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.19%)</title><rect x="14.6129%" y="229" width="0.1931%" height="15" fill="rgb(253,114,12)" fg:x="7566" fg:w="100"/><text x="14.8629%" y="239.50"></text></g><g><title>evolu`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened_with_t (6 samples, 0.01%)</title><rect x="14.8061%" y="229" width="0.0116%" height="15" fill="rgb(215,223,47)" fg:x="7666" fg:w="6"/><text x="15.0561%" y="239.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueueBuilder::end (39 samples, 0.08%)</title><rect x="14.8177%" y="229" width="0.0753%" height="15" fill="rgb(248,225,23)" fg:x="7672" fg:w="39"/><text x="15.0677%" y="239.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueueBuilder::line_segment (35 samples, 0.07%)</title><rect x="14.8254%" y="213" width="0.0676%" height="15" fill="rgb(250,108,0)" fg:x="7676" fg:w="35"/><text x="15.0754%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueueBuilder::line_segment (22 samples, 0.04%)</title><rect x="14.8930%" y="229" width="0.0425%" height="15" fill="rgb(228,208,7)" fg:x="7711" fg:w="22"/><text x="15.1430%" y="239.50"></text></g><g><title>evolu`lyon_geom::quadratic_bezier::FlatteningParameters&lt;S&gt;::from_curve (8 samples, 0.02%)</title><rect x="15.2368%" y="213" width="0.0155%" height="15" fill="rgb(244,45,10)" fg:x="7889" fg:w="8"/><text x="15.4868%" y="223.50"></text></g><g><title>evolu`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened_with_t (279 samples, 0.54%)</title><rect x="15.2522%" y="213" width="0.5389%" height="15" fill="rgb(207,125,25)" fg:x="7897" fg:w="279"/><text x="15.5022%" y="223.50"></text></g><g><title>evolu`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened_with_t::_{{closure}} (12 samples, 0.02%)</title><rect x="15.7911%" y="213" width="0.0232%" height="15" fill="rgb(210,195,18)" fg:x="8176" fg:w="12"/><text x="16.0411%" y="223.50"></text></g><g><title>evolu`lyon_geom::quadratic_bezier::FlatteningParameters&lt;S&gt;::from_curve (604 samples, 1.17%)</title><rect x="15.8317%" y="197" width="1.1666%" height="15" fill="rgb(249,80,12)" fg:x="8197" fg:w="604"/><text x="16.0817%" y="207.50"></text></g><g><title>evolu`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened_with_t::_{{closure}} (521 samples, 1.01%)</title><rect x="16.9982%" y="197" width="1.0063%" height="15" fill="rgb(221,65,9)" fg:x="8801" fg:w="521"/><text x="17.2482%" y="207.50"></text></g><g><title>libsystem_m.dylib`ceilf (32 samples, 0.06%)</title><rect x="18.0045%" y="197" width="0.0618%" height="15" fill="rgb(235,49,36)" fg:x="9322" fg:w="32"/><text x="18.2545%" y="207.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueueBuilder::quadratic_bezier_segment (1,685 samples, 3.25%)</title><rect x="14.9355%" y="229" width="3.2544%" height="15" fill="rgb(225,32,20)" fg:x="7733" fg:w="1685"/><text x="15.1855%" y="239.50">evo..</text></g><g><title>evolu`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened_with_t (1,230 samples, 2.38%)</title><rect x="15.8143%" y="213" width="2.3756%" height="15" fill="rgb(215,141,46)" fg:x="8188" fg:w="1230"/><text x="16.0643%" y="223.50">ev..</text></g><g><title>libsystem_m.dylib`hypotf (64 samples, 0.12%)</title><rect x="18.0663%" y="197" width="0.1236%" height="15" fill="rgb(250,160,47)" fg:x="9354" fg:w="64"/><text x="18.3163%" y="207.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueueBuilder::set_path (1,902 samples, 3.67%)</title><rect x="14.5202%" y="245" width="3.6735%" height="15" fill="rgb(216,222,40)" fg:x="7518" fg:w="1902"/><text x="14.7702%" y="255.50">evol..</text></g><g><title>evolu`&lt;alloc::vec::splice::Splice&lt;I,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.04%)</title><rect x="19.7910%" y="229" width="0.0367%" height="15" fill="rgb(234,217,39)" fg:x="10247" fg:w="19"/><text x="20.0410%" y="239.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::Mesh as nannou_mesh::PushVertex&lt;nannou_mesh::vertex::WithTexCoords&lt;nannou_mesh::vertex::WithColor&lt;glam::vec3::Vec3&gt;&gt;&gt;&gt;::push_vertex (21 samples, 0.04%)</title><rect x="19.8277%" y="229" width="0.0406%" height="15" fill="rgb(207,178,40)" fg:x="10266" fg:w="21"/><text x="20.0777%" y="239.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;A&gt; as lyon_tessellation::geometry_builder::GeometryBuilder&gt;::add_triangle (14 samples, 0.03%)</title><rect x="19.8683%" y="229" width="0.0270%" height="15" fill="rgb(221,136,13)" fg:x="10287" fg:w="14"/><text x="20.1183%" y="239.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::Mesh as nannou_mesh::PushVertex&lt;nannou_mesh::vertex::WithTexCoords&lt;nannou_mesh::vertex::WithColor&lt;glam::vec3::Vec3&gt;&gt;&gt;&gt;::push_vertex (248 samples, 0.48%)</title><rect x="20.4863%" y="213" width="0.4790%" height="15" fill="rgb(249,199,10)" fg:x="10607" fg:w="248"/><text x="20.7363%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::VertexId::from_usize (11 samples, 0.02%)</title><rect x="20.9653%" y="213" width="0.0212%" height="15" fill="rgb(249,222,13)" fg:x="10855" fg:w="11"/><text x="21.2153%" y="223.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;nannou::draw::mesh::builder::SingleColor&gt; as lyon_tessellation::geometry_builder::FillGeometryBuilder&gt;::add_fill_vertex (578 samples, 1.12%)</title><rect x="19.9050%" y="229" width="1.1163%" height="15" fill="rgb(244,185,38)" fg:x="10306" fg:w="578"/><text x="20.1550%" y="239.50"></text></g><g><title>evolu`lyon_tessellation::fill::FillVertex::position (18 samples, 0.03%)</title><rect x="20.9866%" y="213" width="0.0348%" height="15" fill="rgb(236,202,9)" fg:x="10866" fg:w="18"/><text x="21.2366%" y="223.50"></text></g><g><title>evolu`core::slice::sort::recurse (26 samples, 0.05%)</title><rect x="21.0213%" y="229" width="0.0502%" height="15" fill="rgb(250,229,37)" fg:x="10884" fg:w="26"/><text x="21.2713%" y="239.50"></text></g><g><title>evolu`lyon_tessellation::VertexId::from_usize (17 samples, 0.03%)</title><rect x="21.0715%" y="229" width="0.0328%" height="15" fill="rgb(206,174,23)" fg:x="10910" fg:w="17"/><text x="21.3215%" y="239.50"></text></g><g><title>evolu`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="24.8358%" y="213" width="0.0155%" height="15" fill="rgb(211,33,43)" fg:x="12859" fg:w="8"/><text x="25.0858%" y="223.50"></text></g><g><title>evolu`&lt;alloc::vec::splice::Splice&lt;I,A&gt; as core::ops::drop::Drop&gt;::drop (421 samples, 0.81%)</title><rect x="24.8513%" y="213" width="0.8131%" height="15" fill="rgb(245,58,50)" fg:x="12867" fg:w="421"/><text x="25.1013%" y="223.50"></text></g><g><title>evolu`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46 samples, 0.09%)</title><rect x="25.5756%" y="197" width="0.0888%" height="15" fill="rgb(244,68,36)" fg:x="13242" fg:w="46"/><text x="25.8256%" y="207.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;A&gt; as lyon_tessellation::geometry_builder::GeometryBuilder&gt;::add_triangle (324 samples, 0.63%)</title><rect x="25.6644%" y="213" width="0.6258%" height="15" fill="rgb(232,229,15)" fg:x="13288" fg:w="324"/><text x="25.9144%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::VertexId::to_usize (35 samples, 0.07%)</title><rect x="26.2226%" y="197" width="0.0676%" height="15" fill="rgb(254,30,23)" fg:x="13577" fg:w="35"/><text x="26.4726%" y="207.50"></text></g><g><title>evolu`core::slice::sort::recurse (94 samples, 0.18%)</title><rect x="26.2902%" y="213" width="0.1816%" height="15" fill="rgb(235,160,14)" fg:x="13612" fg:w="94"/><text x="26.5402%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::VertexId::to_usize (39 samples, 0.08%)</title><rect x="26.4794%" y="213" width="0.0753%" height="15" fill="rgb(212,155,44)" fg:x="13710" fg:w="39"/><text x="26.7294%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::fill::FillTessellator::merge_coincident_edges (9 samples, 0.02%)</title><rect x="26.5548%" y="213" width="0.0174%" height="15" fill="rgb(226,2,50)" fg:x="13749" fg:w="9"/><text x="26.8048%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::fill::Spans::begin_span (34 samples, 0.07%)</title><rect x="26.5722%" y="213" width="0.0657%" height="15" fill="rgb(234,177,6)" fg:x="13758" fg:w="34"/><text x="26.8222%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::monotone::AdvancedMonotoneTessellator::begin (21 samples, 0.04%)</title><rect x="26.5973%" y="197" width="0.0406%" height="15" fill="rgb(217,24,9)" fg:x="13771" fg:w="21"/><text x="26.8473%" y="207.50"></text></g><g><title>evolu`lyon_tessellation::monotone::BasicMonotoneTessellator::monotone_vertex (72 samples, 0.14%)</title><rect x="26.6687%" y="197" width="0.1391%" height="15" fill="rgb(220,13,46)" fg:x="13808" fg:w="72"/><text x="26.9187%" y="207.50"></text></g><g><title>evolu`lyon_tessellation::monotone::AdvancedMonotoneTessellator::end (328 samples, 0.63%)</title><rect x="26.6378%" y="213" width="0.6335%" height="15" fill="rgb(239,221,27)" fg:x="13792" fg:w="328"/><text x="26.8878%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::monotone::flush_side (240 samples, 0.46%)</title><rect x="26.8078%" y="197" width="0.4635%" height="15" fill="rgb(222,198,25)" fg:x="13880" fg:w="240"/><text x="27.0578%" y="207.50"></text></g><g><title>evolu`lyon_tessellation::monotone::BasicMonotoneTessellator::monotone_vertex (39 samples, 0.08%)</title><rect x="28.0362%" y="197" width="0.0753%" height="15" fill="rgb(211,99,13)" fg:x="14516" fg:w="39"/><text x="28.2862%" y="207.50"></text></g><g><title>evolu`lyon_tessellation::monotone::AdvancedMonotoneTessellator::vertex (469 samples, 0.91%)</title><rect x="27.2713%" y="213" width="0.9058%" height="15" fill="rgb(232,111,31)" fg:x="14120" fg:w="469"/><text x="27.5213%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::monotone::flush_side (34 samples, 0.07%)</title><rect x="28.1115%" y="197" width="0.0657%" height="15" fill="rgb(245,82,37)" fg:x="14555" fg:w="34"/><text x="28.3615%" y="207.50"></text></g><g><title>evolu`lyon_tessellation::fill::FillTessellator::process_events (3,670 samples, 7.09%)</title><rect x="21.1063%" y="229" width="7.0882%" height="15" fill="rgb(227,149,46)" fg:x="10928" fg:w="3670"/><text x="21.3563%" y="239.50">evolu`lyon..</text></g><g><title>evolu`lyon_tessellation::fill::FillVertex::position (32 samples, 0.06%)</title><rect x="28.1945%" y="229" width="0.0618%" height="15" fill="rgb(218,36,50)" fg:x="14598" fg:w="32"/><text x="28.4445%" y="239.50"></text></g><g><title>evolu`lyon_tessellation::fill::FillTessellator::tessellate (8,013 samples, 15.48%)</title><rect x="12.8148%" y="261" width="15.4763%" height="15" fill="rgb(226,80,48)" fg:x="6635" fg:w="8013"/><text x="13.0648%" y="271.50">evolu`lyon_tessellation:..</text></g><g><title>evolu`lyon_tessellation::fill::FillTessellator::tessellate_impl (5,224 samples, 10.09%)</title><rect x="18.2015%" y="245" width="10.0896%" height="15" fill="rgb(238,224,15)" fg:x="9424" fg:w="5224"/><text x="18.4515%" y="255.50">evolu`lyon_tess..</text></g><g><title>evolu`lyon_tessellation::monotone::AdvancedMonotoneTessellator::vertex (16 samples, 0.03%)</title><rect x="28.2602%" y="229" width="0.0309%" height="15" fill="rgb(241,136,10)" fg:x="14632" fg:w="16"/><text x="28.5102%" y="239.50"></text></g><g><title>evolu`nannou::draw::primitive::path::render_path_events (8,035 samples, 15.52%)</title><rect x="12.7762%" y="277" width="15.5188%" height="15" fill="rgb(208,32,45)" fg:x="6615" fg:w="8035"/><text x="13.0262%" y="287.50">evolu`nannou::draw::prim..</text></g><g><title>evolu`nannou::draw::properties::spatial::orientation::Properties::transform (74 samples, 0.14%)</title><rect x="28.2950%" y="277" width="0.1429%" height="15" fill="rgb(207,135,9)" fg:x="14650" fg:w="74"/><text x="28.5450%" y="287.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108c8d70 (15 samples, 0.03%)</title><rect x="28.4379%" y="277" width="0.0290%" height="15" fill="rgb(206,86,44)" fg:x="14724" fg:w="15"/><text x="28.6879%" y="287.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108c8e50 (10 samples, 0.02%)</title><rect x="28.4669%" y="277" width="0.0193%" height="15" fill="rgb(245,177,15)" fg:x="14739" fg:w="10"/><text x="28.7169%" y="287.50"></text></g><g><title>evolu`nannou::draw::primitive::polygon::render_events_themed (8,209 samples, 15.85%)</title><rect x="12.6410%" y="293" width="15.8548%" height="15" fill="rgb(206,64,50)" fg:x="6545" fg:w="8209"/><text x="12.8910%" y="303.50">evolu`nannou::draw::prim..</text></g><g><title>libsystem_m.dylib`0x00007ff8108c8d70 (123 samples, 0.24%)</title><rect x="28.4997%" y="293" width="0.2376%" height="15" fill="rgb(234,36,40)" fg:x="14756" fg:w="123"/><text x="28.7497%" y="303.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108c8e50 (175 samples, 0.34%)</title><rect x="28.7373%" y="293" width="0.3380%" height="15" fill="rgb(213,64,8)" fg:x="14879" fg:w="175"/><text x="28.9873%" y="303.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$cosf (8 samples, 0.02%)</title><rect x="29.0752%" y="293" width="0.0155%" height="15" fill="rgb(210,75,36)" fg:x="15054" fg:w="8"/><text x="29.3252%" y="303.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$sinf (6 samples, 0.01%)</title><rect x="29.0907%" y="293" width="0.0116%" height="15" fill="rgb(229,88,21)" fg:x="15062" fg:w="6"/><text x="29.3407%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (186 samples, 0.36%)</title><rect x="29.1042%" y="293" width="0.3592%" height="15" fill="rgb(252,204,47)" fg:x="15069" fg:w="186"/><text x="29.3542%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (70 samples, 0.14%)</title><rect x="29.3283%" y="277" width="0.1352%" height="15" fill="rgb(208,77,27)" fg:x="15185" fg:w="70"/><text x="29.5783%" y="287.50"></text></g><g><title>evolu`&lt;nannou::draw::primitive::ellipse::Ellipse as nannou::draw::renderer::RenderPrimitive&gt;::render_primitive (10,201 samples, 19.70%)</title><rect x="9.7690%" y="309" width="19.7022%" height="15" fill="rgb(221,76,26)" fg:x="5058" fg:w="10201"/><text x="10.0190%" y="319.50">evolu`&lt;nannou::draw::primitive:..</text></g><g><title>evolu`&lt;lyon_tessellation::stroke::StrokeBuilder as lyon_path::builder::PathBuilder&gt;::line_to (29 samples, 0.06%)</title><rect x="29.6469%" y="261" width="0.0560%" height="15" fill="rgb(225,139,18)" fg:x="15350" fg:w="29"/><text x="29.8969%" y="271.50"></text></g><g><title>evolu`lyon_tessellation::stroke::StrokeBuilder::edge_to (29 samples, 0.06%)</title><rect x="29.6469%" y="245" width="0.0560%" height="15" fill="rgb(230,137,11)" fg:x="15350" fg:w="29"/><text x="29.8969%" y="255.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;A&gt; as lyon_tessellation::geometry_builder::GeometryBuilder&gt;::add_triangle (11 samples, 0.02%)</title><rect x="29.7030%" y="261" width="0.0212%" height="15" fill="rgb(212,28,1)" fg:x="15379" fg:w="11"/><text x="29.9530%" y="271.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;A&gt; as lyon_tessellation::geometry_builder::GeometryBuilder&gt;::add_triangle (7 samples, 0.01%)</title><rect x="29.7957%" y="245" width="0.0135%" height="15" fill="rgb(248,164,17)" fg:x="15427" fg:w="7"/><text x="30.0457%" y="255.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;nannou::draw::mesh::builder::SingleColor&gt; as lyon_tessellation::geometry_builder::StrokeGeometryBuilder&gt;::add_stroke_vertex (45 samples, 0.09%)</title><rect x="29.8092%" y="245" width="0.0869%" height="15" fill="rgb(222,171,42)" fg:x="15434" fg:w="45"/><text x="30.0592%" y="255.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::Mesh as nannou_mesh::PushVertex&lt;nannou_mesh::vertex::WithTexCoords&lt;nannou_mesh::vertex::WithColor&lt;glam::vec3::Vec3&gt;&gt;&gt;&gt;::push_vertex (16 samples, 0.03%)</title><rect x="29.8652%" y="229" width="0.0309%" height="15" fill="rgb(243,84,45)" fg:x="15463" fg:w="16"/><text x="30.1152%" y="239.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;nannou::draw::mesh::builder::SingleColor&gt; as lyon_tessellation::geometry_builder::StrokeGeometryBuilder&gt;::add_stroke_vertex (26 samples, 0.05%)</title><rect x="30.0525%" y="229" width="0.0502%" height="15" fill="rgb(252,49,23)" fg:x="15560" fg:w="26"/><text x="30.3025%" y="239.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::Mesh as nannou_mesh::PushVertex&lt;nannou_mesh::vertex::WithTexCoords&lt;nannou_mesh::vertex::WithColor&lt;glam::vec3::Vec3&gt;&gt;&gt;&gt;::push_vertex (8 samples, 0.02%)</title><rect x="30.0873%" y="213" width="0.0155%" height="15" fill="rgb(215,19,7)" fg:x="15578" fg:w="8"/><text x="30.3373%" y="223.50"></text></g><g><title>evolu`lyon_tessellation::stroke::StrokeBuilder::end (189 samples, 0.37%)</title><rect x="29.7416%" y="261" width="0.3650%" height="15" fill="rgb(238,81,41)" fg:x="15399" fg:w="189"/><text x="29.9916%" y="271.50"></text></g><g><title>evolu`lyon_tessellation::stroke::StrokeBuilder::edge_to (107 samples, 0.21%)</title><rect x="29.9000%" y="245" width="0.2067%" height="15" fill="rgb(210,199,37)" fg:x="15481" fg:w="107"/><text x="30.1500%" y="255.50"></text></g><g><title>evolu`lyon_tessellation::stroke::StrokeBuilder::new (21 samples, 0.04%)</title><rect x="30.1066%" y="261" width="0.0406%" height="15" fill="rgb(244,192,49)" fg:x="15588" fg:w="21"/><text x="30.3566%" y="271.50"></text></g><g><title>evolu`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;A&gt; as lyon_tessellation::geometry_builder::GeometryBuilder&gt;::begin_geometry (7 samples, 0.01%)</title><rect x="30.1337%" y="245" width="0.0135%" height="15" fill="rgb(226,211,11)" fg:x="15602" fg:w="7"/><text x="30.3837%" y="255.50"></text></g><g><title>evolu`lyon_tessellation::stroke::StrokeTessellator::tessellate (299 samples, 0.58%)</title><rect x="29.5774%" y="277" width="0.5775%" height="15" fill="rgb(236,162,54)" fg:x="15314" fg:w="299"/><text x="29.8274%" y="287.50"></text></g><g><title>evolu`nannou::draw::primitive::path::render_path_events (318 samples, 0.61%)</title><rect x="29.5426%" y="293" width="0.6142%" height="15" fill="rgb(220,229,9)" fg:x="15296" fg:w="318"/><text x="29.7926%" y="303.50"></text></g><g><title>evolu`nannou::draw::properties::spatial::orientation::Properties::transform (61 samples, 0.12%)</title><rect x="30.1568%" y="293" width="0.1178%" height="15" fill="rgb(250,87,22)" fg:x="15614" fg:w="61"/><text x="30.4068%" y="303.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108c8d70 (12 samples, 0.02%)</title><rect x="30.2746%" y="293" width="0.0232%" height="15" fill="rgb(239,43,17)" fg:x="15675" fg:w="12"/><text x="30.5246%" y="303.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108c8e50 (11 samples, 0.02%)</title><rect x="30.2978%" y="293" width="0.0212%" height="15" fill="rgb(231,177,25)" fg:x="15687" fg:w="11"/><text x="30.5478%" y="303.50"></text></g><g><title>evolu`&lt;nannou::draw::primitive::line::Line as nannou::draw::renderer::RenderPrimitive&gt;::render_primitive (442 samples, 0.85%)</title><rect x="29.4712%" y="309" width="0.8537%" height="15" fill="rgb(219,179,1)" fg:x="15259" fg:w="442"/><text x="29.7212%" y="319.50"></text></g><g><title>evolu`lyon_tessellation::event_queue::EventQueueBuilder::set_path (6 samples, 0.01%)</title><rect x="30.3480%" y="261" width="0.0116%" height="15" fill="rgb(238,219,53)" fg:x="15713" fg:w="6"/><text x="30.5980%" y="271.50"></text></g><g><title>evolu`nannou::draw::primitive::path::render_path_events (24 samples, 0.05%)</title><rect x="30.3442%" y="293" width="0.0464%" height="15" fill="rgb(232,167,36)" fg:x="15711" fg:w="24"/><text x="30.5942%" y="303.50"></text></g><g><title>evolu`lyon_tessellation::fill::FillTessellator::tessellate (24 samples, 0.05%)</title><rect x="30.3442%" y="277" width="0.0464%" height="15" fill="rgb(244,19,51)" fg:x="15711" fg:w="24"/><text x="30.5942%" y="287.50"></text></g><g><title>evolu`lyon_tessellation::fill::FillTessellator::tessellate_impl (16 samples, 0.03%)</title><rect x="30.3596%" y="261" width="0.0309%" height="15" fill="rgb(224,6,22)" fg:x="15719" fg:w="16"/><text x="30.6096%" y="271.50"></text></g><g><title>evolu`lyon_tessellation::fill::FillTessellator::process_events (12 samples, 0.02%)</title><rect x="30.3674%" y="245" width="0.0232%" height="15" fill="rgb(224,145,5)" fg:x="15723" fg:w="12"/><text x="30.6174%" y="255.50"></text></g><g><title>evolu`lyon_tessellation::fill::Spans::begin_span (6 samples, 0.01%)</title><rect x="30.3789%" y="229" width="0.0116%" height="15" fill="rgb(234,130,49)" fg:x="15729" fg:w="6"/><text x="30.6289%" y="239.50"></text></g><g><title>evolu`nannou::draw::primitive::polygon::render_points_themed (29 samples, 0.06%)</title><rect x="30.3422%" y="309" width="0.0560%" height="15" fill="rgb(254,6,2)" fg:x="15710" fg:w="29"/><text x="30.5922%" y="319.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108c8e50 (9 samples, 0.02%)</title><rect x="30.4098%" y="309" width="0.0174%" height="15" fill="rgb(208,96,46)" fg:x="15745" fg:w="9"/><text x="30.6598%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.05%)</title><rect x="30.4369%" y="309" width="0.0502%" height="15" fill="rgb(239,3,39)" fg:x="15759" fg:w="26"/><text x="30.6869%" y="319.50"></text></g><g><title>evolu`&lt;nannou::draw::primitive::Primitive as nannou::draw::renderer::RenderPrimitive&gt;::render_primitive (10,780 samples, 20.82%)</title><rect x="9.6724%" y="325" width="20.8205%" height="15" fill="rgb(233,210,1)" fg:x="5008" fg:w="10780"/><text x="9.9224%" y="335.50">evolu`&lt;nannou::draw::primitive::P..</text></g><g><title>evolu`&lt;nannou_wgpu::texture::TextureView as core::clone::Clone&gt;::clone (46 samples, 0.09%)</title><rect x="30.4948%" y="325" width="0.0888%" height="15" fill="rgb(244,137,37)" fg:x="15789" fg:w="46"/><text x="30.7448%" y="335.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (46 samples, 0.09%)</title><rect x="30.5837%" y="325" width="0.0888%" height="15" fill="rgb(240,136,2)" fg:x="15835" fg:w="46"/><text x="30.8337%" y="335.50"></text></g><g><title>evolu`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (96 samples, 0.19%)</title><rect x="30.6822%" y="325" width="0.1854%" height="15" fill="rgb(239,18,37)" fg:x="15886" fg:w="96"/><text x="30.9322%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (76 samples, 0.15%)</title><rect x="30.7208%" y="309" width="0.1468%" height="15" fill="rgb(218,185,22)" fg:x="15906" fg:w="76"/><text x="30.9708%" y="319.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (74 samples, 0.14%)</title><rect x="31.0472%" y="309" width="0.1429%" height="15" fill="rgb(225,218,4)" fg:x="16075" fg:w="74"/><text x="31.2972%" y="319.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.05%)</title><rect x="31.1418%" y="293" width="0.0483%" height="15" fill="rgb(230,182,32)" fg:x="16124" fg:w="25"/><text x="31.3918%" y="303.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (187 samples, 0.36%)</title><rect x="30.8792%" y="325" width="0.3612%" height="15" fill="rgb(242,56,43)" fg:x="15988" fg:w="187"/><text x="31.1292%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.04%)</title><rect x="31.1979%" y="309" width="0.0425%" height="15" fill="rgb(233,99,24)" fg:x="16153" fg:w="22"/><text x="31.4479%" y="319.50"></text></g><g><title>evolu`nannou::draw::renderer::blend_component_hash (175 samples, 0.34%)</title><rect x="31.2519%" y="325" width="0.3380%" height="15" fill="rgb(234,209,42)" fg:x="16181" fg:w="175"/><text x="31.5019%" y="335.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (104 samples, 0.20%)</title><rect x="31.3891%" y="309" width="0.2009%" height="15" fill="rgb(227,7,12)" fg:x="16252" fg:w="104"/><text x="31.6391%" y="319.50"></text></g><g><title>evolu`nannou::draw::renderer::sampler_descriptor_hash (296 samples, 0.57%)</title><rect x="31.5899%" y="325" width="0.5717%" height="15" fill="rgb(245,203,43)" fg:x="16356" fg:w="296"/><text x="31.8399%" y="335.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (227 samples, 0.44%)</title><rect x="31.7232%" y="309" width="0.4384%" height="15" fill="rgb(238,205,33)" fg:x="16425" fg:w="227"/><text x="31.9732%" y="319.50"></text></g><g><title>evolu`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (151 samples, 0.29%)</title><rect x="32.3625%" y="309" width="0.2916%" height="15" fill="rgb(231,56,7)" fg:x="16756" fg:w="151"/><text x="32.6125%" y="319.50"></text></g><g><title>evolu`&lt;core::num::nonzero::NonZeroU32 as core::hash::Hash&gt;::hash (16 samples, 0.03%)</title><rect x="32.6541%" y="309" width="0.0309%" height="15" fill="rgb(244,186,29)" fg:x="16907" fg:w="16"/><text x="32.9041%" y="319.50"></text></g><g><title>evolu`nannou_wgpu::texture::TextureView::id (360 samples, 0.70%)</title><rect x="32.1636%" y="325" width="0.6953%" height="15" fill="rgb(234,111,31)" fg:x="16653" fg:w="360"/><text x="32.4136%" y="335.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (90 samples, 0.17%)</title><rect x="32.6850%" y="309" width="0.1738%" height="15" fill="rgb(241,149,10)" fg:x="16923" fg:w="90"/><text x="32.9350%" y="319.50"></text></g><g><title>evolu`nannou_wgpu::texture::TextureView::sample_type (25 samples, 0.05%)</title><rect x="32.8589%" y="325" width="0.0483%" height="15" fill="rgb(249,206,44)" fg:x="17013" fg:w="25"/><text x="33.1089%" y="335.50"></text></g><g><title>evolu`wgpu_types::TextureFormat::describe (20 samples, 0.04%)</title><rect x="32.8685%" y="309" width="0.0386%" height="15" fill="rgb(251,153,30)" fg:x="17018" fg:w="20"/><text x="33.1185%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (23 samples, 0.04%)</title><rect x="32.9091%" y="309" width="0.0444%" height="15" fill="rgb(239,152,38)" fg:x="17039" fg:w="23"/><text x="33.1591%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (25 samples, 0.05%)</title><rect x="32.9091%" y="325" width="0.0483%" height="15" fill="rgb(249,139,47)" fg:x="17039" fg:w="25"/><text x="33.1591%" y="335.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (6 samples, 0.01%)</title><rect x="32.9593%" y="325" width="0.0116%" height="15" fill="rgb(244,64,35)" fg:x="17065" fg:w="6"/><text x="33.2093%" y="335.50"></text></g><g><title>evolu`nannou::draw::renderer::Renderer::fill (12,387 samples, 23.92%)</title><rect x="9.2031%" y="341" width="23.9242%" height="15" fill="rgb(216,46,15)" fg:x="4765" fg:w="12387"/><text x="9.4531%" y="351.50">evolu`nannou::draw::renderer::Renderer..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (81 samples, 0.16%)</title><rect x="32.9709%" y="325" width="0.1564%" height="15" fill="rgb(250,74,19)" fg:x="17071" fg:w="81"/><text x="33.2209%" y="335.50"></text></g><g><title>evolu`nannou::draw::renderer::blend_component_hash (6 samples, 0.01%)</title><rect x="33.1273%" y="341" width="0.0116%" height="15" fill="rgb(249,42,33)" fg:x="17152" fg:w="6"/><text x="33.3773%" y="351.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (12 samples, 0.02%)</title><rect x="33.1679%" y="341" width="0.0232%" height="15" fill="rgb(242,149,17)" fg:x="17173" fg:w="12"/><text x="33.4179%" y="351.50"></text></g><g><title>evolu`nannou::draw::renderer::Renderer::encode_render_pass (14,867 samples, 28.71%)</title><rect x="4.4944%" y="357" width="28.7141%" height="15" fill="rgb(244,29,21)" fg:x="2327" fg:w="14867"/><text x="4.7444%" y="367.50">evolu`nannou::draw::renderer::Renderer::encode..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="33.1911%" y="341" width="0.0174%" height="15" fill="rgb(220,130,37)" fg:x="17185" fg:w="9"/><text x="33.4411%" y="351.50"></text></g><g><title>evolu`nannou::app::_&lt;impl nannou::draw::Draw&gt;::to_frame (14,876 samples, 28.73%)</title><rect x="4.4789%" y="389" width="28.7315%" height="15" fill="rgb(211,67,2)" fg:x="2319" fg:w="14876"/><text x="4.7289%" y="399.50">evolu`nannou::app::_&lt;impl nannou::draw::Draw&gt;:..</text></g><g><title>evolu`nannou::draw::renderer::Renderer::render_to_frame (14,869 samples, 28.72%)</title><rect x="4.4924%" y="373" width="28.7179%" height="15" fill="rgb(235,68,52)" fg:x="2326" fg:w="14869"/><text x="4.7424%" y="383.50">evolu`nannou::draw::renderer::Renderer::render..</text></g><g><title>evolu`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (39 samples, 0.08%)</title><rect x="33.3398%" y="373" width="0.0753%" height="15" fill="rgb(246,142,3)" fg:x="17262" fg:w="39"/><text x="33.5898%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (21 samples, 0.04%)</title><rect x="33.3745%" y="357" width="0.0406%" height="15" fill="rgb(241,25,7)" fg:x="17280" fg:w="21"/><text x="33.6245%" y="367.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (35 samples, 0.07%)</title><rect x="33.4170%" y="373" width="0.0676%" height="15" fill="rgb(242,119,39)" fg:x="17302" fg:w="35"/><text x="33.6670%" y="383.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.03%)</title><rect x="33.4499%" y="357" width="0.0348%" height="15" fill="rgb(241,98,45)" fg:x="17319" fg:w="18"/><text x="33.6999%" y="367.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::insert (27 samples, 0.05%)</title><rect x="33.4846%" y="373" width="0.0521%" height="15" fill="rgb(254,28,30)" fg:x="17337" fg:w="27"/><text x="33.7346%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.03%)</title><rect x="33.5078%" y="357" width="0.0290%" height="15" fill="rgb(241,142,54)" fg:x="17349" fg:w="15"/><text x="33.7578%" y="367.50"></text></g><g><title>evolu`nannou::draw::Draw::ellipse (242 samples, 0.47%)</title><rect x="33.2104%" y="389" width="0.4674%" height="15" fill="rgb(222,85,15)" fg:x="17195" fg:w="242"/><text x="33.4604%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (71 samples, 0.14%)</title><rect x="33.5406%" y="373" width="0.1371%" height="15" fill="rgb(210,85,47)" fg:x="17366" fg:w="71"/><text x="33.7906%" y="383.50"></text></g><g><title>evolu`&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (48 samples, 0.09%)</title><rect x="33.7647%" y="373" width="0.0927%" height="15" fill="rgb(224,206,25)" fg:x="17482" fg:w="48"/><text x="34.0147%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (25 samples, 0.05%)</title><rect x="33.8091%" y="357" width="0.0483%" height="15" fill="rgb(243,201,19)" fg:x="17505" fg:w="25"/><text x="34.0591%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (19 samples, 0.04%)</title><rect x="33.8612%" y="277" width="0.0367%" height="15" fill="rgb(236,59,4)" fg:x="17532" fg:w="19"/><text x="34.1112%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (21 samples, 0.04%)</title><rect x="33.8612%" y="293" width="0.0406%" height="15" fill="rgb(254,179,45)" fg:x="17532" fg:w="21"/><text x="34.1112%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (73 samples, 0.14%)</title><rect x="33.8612%" y="325" width="0.1410%" height="15" fill="rgb(226,14,10)" fg:x="17532" fg:w="73"/><text x="34.1112%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (73 samples, 0.14%)</title><rect x="33.8612%" y="309" width="0.1410%" height="15" fill="rgb(244,27,41)" fg:x="17532" fg:w="73"/><text x="34.1112%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (51 samples, 0.10%)</title><rect x="33.9037%" y="293" width="0.0985%" height="15" fill="rgb(235,35,32)" fg:x="17554" fg:w="51"/><text x="34.1537%" y="303.50"></text></g><g><title>evolu`alloc::raw_vec::finish_grow (74 samples, 0.14%)</title><rect x="33.8612%" y="357" width="0.1429%" height="15" fill="rgb(218,68,31)" fg:x="17532" fg:w="74"/><text x="34.1112%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (74 samples, 0.14%)</title><rect x="33.8612%" y="341" width="0.1429%" height="15" fill="rgb(207,120,37)" fg:x="17532" fg:w="74"/><text x="34.1112%" y="351.50"></text></g><g><title>evolu`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (75 samples, 0.14%)</title><rect x="33.8612%" y="373" width="0.1449%" height="15" fill="rgb(227,98,0)" fg:x="17532" fg:w="75"/><text x="34.1112%" y="383.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (20 samples, 0.04%)</title><rect x="34.0061%" y="373" width="0.0386%" height="15" fill="rgb(207,7,3)" fg:x="17607" fg:w="20"/><text x="34.2561%" y="383.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="34.0312%" y="357" width="0.0135%" height="15" fill="rgb(206,98,19)" fg:x="17620" fg:w="7"/><text x="34.2812%" y="367.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::insert (31 samples, 0.06%)</title><rect x="34.0447%" y="373" width="0.0599%" height="15" fill="rgb(217,5,26)" fg:x="17627" fg:w="31"/><text x="34.2947%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.04%)</title><rect x="34.0660%" y="357" width="0.0386%" height="15" fill="rgb(235,190,38)" fg:x="17638" fg:w="20"/><text x="34.3160%" y="367.50"></text></g><g><title>evolu`nannou::draw::Draw::line (325 samples, 0.63%)</title><rect x="33.6778%" y="389" width="0.6277%" height="15" fill="rgb(247,86,24)" fg:x="17437" fg:w="325"/><text x="33.9278%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (100 samples, 0.19%)</title><rect x="34.1123%" y="373" width="0.1931%" height="15" fill="rgb(205,101,16)" fg:x="17662" fg:w="100"/><text x="34.3623%" y="383.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (49 samples, 0.09%)</title><rect x="34.3480%" y="373" width="0.0946%" height="15" fill="rgb(246,168,33)" fg:x="17784" fg:w="49"/><text x="34.5980%" y="383.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.03%)</title><rect x="34.4098%" y="357" width="0.0328%" height="15" fill="rgb(231,114,1)" fg:x="17816" fg:w="17"/><text x="34.6598%" y="367.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (79 samples, 0.15%)</title><rect x="34.4426%" y="373" width="0.1526%" height="15" fill="rgb(207,184,53)" fg:x="17833" fg:w="79"/><text x="34.6926%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.03%)</title><rect x="34.5604%" y="357" width="0.0348%" height="15" fill="rgb(224,95,51)" fg:x="17894" fg:w="18"/><text x="34.8104%" y="367.50"></text></g><g><title>evolu`nannou::draw::State::finish_drawing (208 samples, 0.40%)</title><rect x="34.3093%" y="389" width="0.4017%" height="15" fill="rgb(212,188,45)" fg:x="17764" fg:w="208"/><text x="34.5593%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (58 samples, 0.11%)</title><rect x="34.5990%" y="373" width="0.1120%" height="15" fill="rgb(223,154,38)" fg:x="17914" fg:w="58"/><text x="34.8490%" y="383.50"></text></g><g><title>evolu`&lt;f32 as palette::Component&gt;::max_intensity (8 samples, 0.02%)</title><rect x="34.9023%" y="373" width="0.0155%" height="15" fill="rgb(251,22,52)" fg:x="18071" fg:w="8"/><text x="35.1523%" y="383.50"></text></g><g><title>evolu`&lt;palette::rgb::rgb::Rgb&lt;palette::encoding::srgb::Srgb,T&gt; as nannou_core::color::conv::IntoLinSrgba&lt;S&gt;&gt;::into_lin_srgba (94 samples, 0.18%)</title><rect x="34.9197%" y="373" width="0.1816%" height="15" fill="rgb(229,209,22)" fg:x="18080" fg:w="94"/><text x="35.1697%" y="383.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::insert (41 samples, 0.08%)</title><rect x="35.2132%" y="357" width="0.0792%" height="15" fill="rgb(234,138,34)" fg:x="18232" fg:w="41"/><text x="35.4632%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.04%)</title><rect x="35.2499%" y="341" width="0.0425%" height="15" fill="rgb(212,95,11)" fg:x="18251" fg:w="22"/><text x="35.4999%" y="351.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (113 samples, 0.22%)</title><rect x="35.1070%" y="373" width="0.2182%" height="15" fill="rgb(240,179,47)" fg:x="18177" fg:w="113"/><text x="35.3570%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.03%)</title><rect x="35.2943%" y="357" width="0.0309%" height="15" fill="rgb(240,163,11)" fg:x="18274" fg:w="16"/><text x="35.5443%" y="367.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (85 samples, 0.16%)</title><rect x="35.3252%" y="373" width="0.1642%" height="15" fill="rgb(236,37,12)" fg:x="18290" fg:w="85"/><text x="35.5752%" y="383.50"></text></g><g><title>evolu`nannou::draw::primitive::ellipse::_&lt;impl core::convert::From&lt;nannou::draw::primitive::ellipse::Ellipse&gt; for nannou::draw::primitive::Primitive&gt;::from (11 samples, 0.02%)</title><rect x="35.4991%" y="373" width="0.0212%" height="15" fill="rgb(232,164,16)" fg:x="18380" fg:w="11"/><text x="35.7491%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="35.5049%" y="357" width="0.0155%" height="15" fill="rgb(244,205,15)" fg:x="18383" fg:w="8"/><text x="35.7549%" y="367.50"></text></g><g><title>evolu`nannou::draw::primitive::ellipse::_&lt;impl core::convert::Into&lt;core::option::Option&lt;nannou::draw::primitive::ellipse::Ellipse&gt;&gt; for nannou::draw::primitive::Primitive&gt;::into (6 samples, 0.01%)</title><rect x="35.5203%" y="373" width="0.0116%" height="15" fill="rgb(223,117,47)" fg:x="18391" fg:w="6"/><text x="35.7703%" y="383.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108d7a50 (277 samples, 0.53%)</title><rect x="35.5396%" y="373" width="0.5350%" height="15" fill="rgb(244,107,35)" fg:x="18401" fg:w="277"/><text x="35.7896%" y="383.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$powf (6 samples, 0.01%)</title><rect x="36.0746%" y="373" width="0.0116%" height="15" fill="rgb(205,140,8)" fg:x="18678" fg:w="6"/><text x="36.3246%" y="383.50"></text></g><g><title>evolu`nannou::draw::drawing::Drawing&lt;T&gt;::color (839 samples, 1.62%)</title><rect x="34.7111%" y="389" width="1.6204%" height="15" fill="rgb(228,84,46)" fg:x="17972" fg:w="839"/><text x="34.9611%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (125 samples, 0.24%)</title><rect x="36.0901%" y="373" width="0.2414%" height="15" fill="rgb(254,188,9)" fg:x="18686" fg:w="125"/><text x="36.3401%" y="383.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::insert (22 samples, 0.04%)</title><rect x="36.4570%" y="357" width="0.0425%" height="15" fill="rgb(206,112,54)" fg:x="18876" fg:w="22"/><text x="36.7070%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="36.4783%" y="341" width="0.0212%" height="15" fill="rgb(216,84,49)" fg:x="18887" fg:w="11"/><text x="36.7283%" y="351.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (66 samples, 0.13%)</title><rect x="36.4010%" y="373" width="0.1275%" height="15" fill="rgb(214,194,35)" fg:x="18847" fg:w="66"/><text x="36.6510%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.03%)</title><rect x="36.4995%" y="357" width="0.0290%" height="15" fill="rgb(249,28,3)" fg:x="18898" fg:w="15"/><text x="36.7495%" y="367.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (50 samples, 0.10%)</title><rect x="36.5285%" y="373" width="0.0966%" height="15" fill="rgb(222,56,52)" fg:x="18913" fg:w="50"/><text x="36.7785%" y="383.50"></text></g><g><title>evolu`nannou::draw::primitive::ellipse::_&lt;impl core::convert::From&lt;nannou::draw::primitive::ellipse::Ellipse&gt; for nannou::draw::primitive::Primitive&gt;::from (8 samples, 0.02%)</title><rect x="36.6251%" y="373" width="0.0155%" height="15" fill="rgb(245,217,50)" fg:x="18963" fg:w="8"/><text x="36.8751%" y="383.50"></text></g><g><title>evolu`nannou::draw::primitive::ellipse::_&lt;impl core::convert::Into&lt;core::option::Option&lt;nannou::draw::primitive::ellipse::Ellipse&gt;&gt; for nannou::draw::primitive::Primitive&gt;::into (8 samples, 0.02%)</title><rect x="36.6405%" y="373" width="0.0155%" height="15" fill="rgb(213,201,24)" fg:x="18971" fg:w="8"/><text x="36.8905%" y="383.50"></text></g><g><title>evolu`nannou::draw::drawing::Drawing&lt;T&gt;::xy (239 samples, 0.46%)</title><rect x="36.3334%" y="389" width="0.4616%" height="15" fill="rgb(248,116,28)" fg:x="18812" fg:w="239"/><text x="36.5834%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (71 samples, 0.14%)</title><rect x="36.6579%" y="373" width="0.1371%" height="15" fill="rgb(219,72,43)" fg:x="18980" fg:w="71"/><text x="36.9079%" y="383.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (24 samples, 0.05%)</title><rect x="36.8916%" y="373" width="0.0464%" height="15" fill="rgb(209,138,14)" fg:x="19101" fg:w="24"/><text x="37.1416%" y="383.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="36.9186%" y="357" width="0.0193%" height="15" fill="rgb(222,18,33)" fg:x="19115" fg:w="10"/><text x="37.1686%" y="367.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (34 samples, 0.07%)</title><rect x="36.9611%" y="357" width="0.0657%" height="15" fill="rgb(213,199,7)" fg:x="19137" fg:w="34"/><text x="37.2111%" y="367.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="37.0017%" y="341" width="0.0251%" height="15" fill="rgb(250,110,10)" fg:x="19158" fg:w="13"/><text x="37.2517%" y="351.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::insert (16 samples, 0.03%)</title><rect x="37.0268%" y="357" width="0.0309%" height="15" fill="rgb(248,123,6)" fg:x="19171" fg:w="16"/><text x="37.2768%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="37.0423%" y="341" width="0.0155%" height="15" fill="rgb(206,91,31)" fg:x="19179" fg:w="8"/><text x="37.2923%" y="351.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (75 samples, 0.14%)</title><rect x="36.9380%" y="373" width="0.1449%" height="15" fill="rgb(211,154,13)" fg:x="19125" fg:w="75"/><text x="37.1880%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="37.0635%" y="357" width="0.0193%" height="15" fill="rgb(225,148,7)" fg:x="19190" fg:w="10"/><text x="37.3135%" y="367.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (31 samples, 0.06%)</title><rect x="37.0828%" y="373" width="0.0599%" height="15" fill="rgb(220,160,43)" fg:x="19200" fg:w="31"/><text x="37.3328%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="37.1272%" y="357" width="0.0155%" height="15" fill="rgb(213,52,39)" fg:x="19223" fg:w="8"/><text x="37.3772%" y="367.50"></text></g><g><title>evolu`nannou::draw::primitive::ellipse::_&lt;impl nannou::draw::drawing::Drawing&lt;nannou::draw::primitive::ellipse::Ellipse&gt;&gt;::radius (221 samples, 0.43%)</title><rect x="36.8066%" y="389" width="0.4268%" height="15" fill="rgb(243,137,7)" fg:x="19057" fg:w="221"/><text x="37.0566%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (46 samples, 0.09%)</title><rect x="37.1446%" y="373" width="0.0888%" height="15" fill="rgb(230,79,13)" fg:x="19232" fg:w="46"/><text x="37.3946%" y="383.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (23 samples, 0.04%)</title><rect x="37.3223%" y="373" width="0.0444%" height="15" fill="rgb(247,105,23)" fg:x="19324" fg:w="23"/><text x="37.5723%" y="383.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="37.3551%" y="357" width="0.0116%" height="15" fill="rgb(223,179,41)" fg:x="19341" fg:w="6"/><text x="37.6051%" y="367.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (28 samples, 0.05%)</title><rect x="37.4034%" y="357" width="0.0541%" height="15" fill="rgb(218,9,34)" fg:x="19366" fg:w="28"/><text x="37.6534%" y="367.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.02%)</title><rect x="37.4382%" y="341" width="0.0193%" height="15" fill="rgb(222,106,8)" fg:x="19384" fg:w="10"/><text x="37.6882%" y="351.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::insert (30 samples, 0.06%)</title><rect x="37.4575%" y="357" width="0.0579%" height="15" fill="rgb(211,220,0)" fg:x="19394" fg:w="30"/><text x="37.7075%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="37.4826%" y="341" width="0.0328%" height="15" fill="rgb(229,52,16)" fg:x="19407" fg:w="17"/><text x="37.7326%" y="351.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (90 samples, 0.17%)</title><rect x="37.3667%" y="373" width="0.1738%" height="15" fill="rgb(212,155,18)" fg:x="19347" fg:w="90"/><text x="37.6167%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.03%)</title><rect x="37.5155%" y="357" width="0.0251%" height="15" fill="rgb(242,21,14)" fg:x="19424" fg:w="13"/><text x="37.7655%" y="367.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (30 samples, 0.06%)</title><rect x="37.5406%" y="373" width="0.0579%" height="15" fill="rgb(222,19,48)" fg:x="19437" fg:w="30"/><text x="37.7906%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="37.5792%" y="357" width="0.0193%" height="15" fill="rgb(232,45,27)" fg:x="19457" fg:w="10"/><text x="37.8292%" y="367.50"></text></g><g><title>evolu`nannou::draw::primitive::line::_&lt;impl nannou::draw::drawing::Drawing&lt;nannou::draw::primitive::line::Line&gt;&gt;::end (230 samples, 0.44%)</title><rect x="37.2354%" y="389" width="0.4442%" height="15" fill="rgb(249,103,42)" fg:x="19279" fg:w="230"/><text x="37.4854%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.08%)</title><rect x="37.6024%" y="373" width="0.0773%" height="15" fill="rgb(246,81,33)" fg:x="19469" fg:w="40"/><text x="37.8524%" y="383.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (35 samples, 0.07%)</title><rect x="37.7665%" y="373" width="0.0676%" height="15" fill="rgb(252,33,42)" fg:x="19554" fg:w="35"/><text x="38.0165%" y="383.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="37.8071%" y="357" width="0.0270%" height="15" fill="rgb(209,212,41)" fg:x="19575" fg:w="14"/><text x="38.0571%" y="367.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (29 samples, 0.06%)</title><rect x="37.8534%" y="357" width="0.0560%" height="15" fill="rgb(207,154,6)" fg:x="19599" fg:w="29"/><text x="38.1034%" y="367.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.03%)</title><rect x="37.8843%" y="341" width="0.0251%" height="15" fill="rgb(223,64,47)" fg:x="19615" fg:w="13"/><text x="38.1343%" y="351.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::insert (17 samples, 0.03%)</title><rect x="37.9095%" y="357" width="0.0328%" height="15" fill="rgb(211,161,38)" fg:x="19628" fg:w="17"/><text x="38.1595%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="37.9288%" y="341" width="0.0135%" height="15" fill="rgb(219,138,40)" fg:x="19638" fg:w="7"/><text x="38.1788%" y="351.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (73 samples, 0.14%)</title><rect x="37.8341%" y="373" width="0.1410%" height="15" fill="rgb(241,228,46)" fg:x="19589" fg:w="73"/><text x="38.0841%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.03%)</title><rect x="37.9481%" y="357" width="0.0270%" height="15" fill="rgb(223,209,38)" fg:x="19648" fg:w="14"/><text x="38.1981%" y="367.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (31 samples, 0.06%)</title><rect x="37.9751%" y="373" width="0.0599%" height="15" fill="rgb(236,164,45)" fg:x="19662" fg:w="31"/><text x="38.2251%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="38.0138%" y="357" width="0.0212%" height="15" fill="rgb(231,15,5)" fg:x="19682" fg:w="11"/><text x="38.2638%" y="367.50"></text></g><g><title>evolu`nannou::draw::primitive::line::_&lt;impl nannou::draw::drawing::Drawing&lt;nannou::draw::primitive::line::Line&gt;&gt;::start (236 samples, 0.46%)</title><rect x="37.6796%" y="389" width="0.4558%" height="15" fill="rgb(252,35,15)" fg:x="19509" fg:w="236"/><text x="37.9296%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (51 samples, 0.10%)</title><rect x="38.0369%" y="373" width="0.0985%" height="15" fill="rgb(248,181,18)" fg:x="19694" fg:w="51"/><text x="38.2869%" y="383.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (25 samples, 0.05%)</title><rect x="38.2726%" y="373" width="0.0483%" height="15" fill="rgb(233,39,42)" fg:x="19816" fg:w="25"/><text x="38.5226%" y="383.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="38.3054%" y="357" width="0.0155%" height="15" fill="rgb(238,110,33)" fg:x="19833" fg:w="8"/><text x="38.5554%" y="367.50"></text></g><g><title>evolu`core::hash::BuildHasher::hash_one (42 samples, 0.08%)</title><rect x="38.3537%" y="357" width="0.0811%" height="15" fill="rgb(233,195,10)" fg:x="19858" fg:w="42"/><text x="38.6037%" y="367.50"></text></g><g><title>evolu`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.03%)</title><rect x="38.4078%" y="341" width="0.0270%" height="15" fill="rgb(254,105,3)" fg:x="19886" fg:w="14"/><text x="38.6578%" y="351.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::insert (17 samples, 0.03%)</title><rect x="38.4348%" y="357" width="0.0328%" height="15" fill="rgb(221,225,9)" fg:x="19900" fg:w="17"/><text x="38.6848%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="38.4483%" y="341" width="0.0193%" height="15" fill="rgb(224,227,45)" fg:x="19907" fg:w="10"/><text x="38.6983%" y="351.50"></text></g><g><title>evolu`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (88 samples, 0.17%)</title><rect x="38.3208%" y="373" width="0.1700%" height="15" fill="rgb(229,198,43)" fg:x="19841" fg:w="88"/><text x="38.5708%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="38.4676%" y="357" width="0.0232%" height="15" fill="rgb(206,209,35)" fg:x="19917" fg:w="12"/><text x="38.7176%" y="367.50"></text></g><g><title>evolu`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (37 samples, 0.07%)</title><rect x="38.4908%" y="373" width="0.0715%" height="15" fill="rgb(245,195,53)" fg:x="19929" fg:w="37"/><text x="38.7408%" y="383.50"></text></g><g><title>evolu`nannou::draw::primitive::line::_&lt;impl nannou::draw::drawing::Drawing&lt;nannou::draw::primitive::line::Line&gt;&gt;::weight (240 samples, 0.46%)</title><rect x="38.1354%" y="389" width="0.4635%" height="15" fill="rgb(240,92,26)" fg:x="19745" fg:w="240"/><text x="38.3854%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.03%)</title><rect x="38.5642%" y="373" width="0.0348%" height="15" fill="rgb(207,40,23)" fg:x="19967" fg:w="18"/><text x="38.8142%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (33 samples, 0.06%)</title><rect x="38.6028%" y="389" width="0.0637%" height="15" fill="rgb(223,111,35)" fg:x="19987" fg:w="33"/><text x="38.8528%" y="399.50"></text></g><g><title>evolu`evolu::view (19,928 samples, 38.49%)</title><rect x="0.3534%" y="405" width="38.4889%" height="15" fill="rgb(229,147,28)" fg:x="183" fg:w="19928"/><text x="0.6034%" y="415.50">evolu`evolu::view</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (91 samples, 0.18%)</title><rect x="38.6666%" y="389" width="0.1758%" height="15" fill="rgb(211,29,28)" fg:x="20020" fg:w="91"/><text x="38.9166%" y="399.50"></text></g><g><title>evolu`&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="38.8462%" y="389" width="0.0290%" height="15" fill="rgb(228,72,33)" fg:x="20113" fg:w="15"/><text x="39.0962%" y="399.50"></text></g><g><title>evolu`&lt;itertools::adaptors::TupleCombinations&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (133 samples, 0.26%)</title><rect x="38.8771%" y="389" width="0.2569%" height="15" fill="rgb(205,214,31)" fg:x="20129" fg:w="133"/><text x="39.1271%" y="399.50"></text></g><g><title>evolu`&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,475 samples, 2.85%)</title><rect x="53.9323%" y="373" width="2.8488%" height="15" fill="rgb(224,111,15)" fg:x="27924" fg:w="1475"/><text x="54.1823%" y="383.50">ev..</text></g><g><title>evolu`&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,490 samples, 4.81%)</title><rect x="59.4156%" y="357" width="4.8092%" height="15" fill="rgb(253,21,26)" fg:x="30763" fg:w="2490"/><text x="59.6656%" y="367.50">evolu`..</text></g><g><title>evolu`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::clone::Clone&gt;::clone (147 samples, 0.28%)</title><rect x="64.2247%" y="357" width="0.2839%" height="15" fill="rgb(245,139,43)" fg:x="33253" fg:w="147"/><text x="64.4747%" y="367.50"></text></g><g><title>evolu`&lt;itertools::adaptors::TupleCombinations&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,280 samples, 8.27%)</title><rect x="56.7889%" y="373" width="8.2664%" height="15" fill="rgb(252,170,7)" fg:x="29403" fg:w="4280"/><text x="57.0389%" y="383.50">evolu`&lt;itert..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (283 samples, 0.55%)</title><rect x="64.5087%" y="357" width="0.5466%" height="15" fill="rgb(231,118,14)" fg:x="33400" fg:w="283"/><text x="64.7587%" y="367.50"></text></g><g><title>evolu`DYLD-STUB$$memcpy (8 samples, 0.02%)</title><rect x="65.0552%" y="373" width="0.0155%" height="15" fill="rgb(238,83,0)" fg:x="33683" fg:w="8"/><text x="65.3052%" y="383.50"></text></g><g><title>evolu`core::ops::function::FnOnce::call_once (18 samples, 0.03%)</title><rect x="65.0746%" y="373" width="0.0348%" height="15" fill="rgb(221,39,39)" fg:x="33693" fg:w="18"/><text x="65.3246%" y="383.50"></text></g><g><title>evolu`evolu::model::world::bone::Bone::update (734 samples, 1.42%)</title><rect x="65.1093%" y="373" width="1.4176%" height="15" fill="rgb(222,119,46)" fg:x="33711" fg:w="734"/><text x="65.3593%" y="383.50"></text></g><g><title>evolu`core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="67.5525%" y="357" width="0.0135%" height="15" fill="rgb(222,165,49)" fg:x="34976" fg:w="7"/><text x="67.8025%" y="367.50"></text></g><g><title>evolu`evolu::model::world::muscle::Muscle::update (541 samples, 1.04%)</title><rect x="66.5270%" y="373" width="1.0449%" height="15" fill="rgb(219,113,52)" fg:x="34445" fg:w="541"/><text x="66.7770%" y="383.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108c8d70 (451 samples, 0.87%)</title><rect x="67.5718%" y="373" width="0.8711%" height="15" fill="rgb(214,7,15)" fg:x="34986" fg:w="451"/><text x="67.8218%" y="383.50"></text></g><g><title>libsystem_m.dylib`DYLD-STUB$$sinf (10 samples, 0.02%)</title><rect x="68.4429%" y="373" width="0.0193%" height="15" fill="rgb(235,32,4)" fg:x="35437" fg:w="10"/><text x="68.6929%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (21 samples, 0.04%)</title><rect x="68.4622%" y="373" width="0.0406%" height="15" fill="rgb(238,90,54)" fg:x="35447" fg:w="21"/><text x="68.7122%" y="383.50"></text></g><g><title>evolu`evolu::model::world::World::update (15,411 samples, 29.76%)</title><rect x="39.1417%" y="389" width="29.7648%" height="15" fill="rgb(213,208,19)" fg:x="20266" fg:w="15411"/><text x="39.3917%" y="399.50">evolu`evolu::model::world::World::update</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (209 samples, 0.40%)</title><rect x="68.5028%" y="373" width="0.4037%" height="15" fill="rgb(233,156,4)" fg:x="35468" fg:w="209"/><text x="68.7528%" y="383.50"></text></g><g><title>evolu`evolu::model::world::bone::Bone::update (15 samples, 0.03%)</title><rect x="68.9064%" y="389" width="0.0290%" height="15" fill="rgb(207,194,5)" fg:x="35677" fg:w="15"/><text x="69.1564%" y="399.50"></text></g><g><title>evolu`&lt;itertools::adaptors::TupleCombinations&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.22%)</title><rect x="68.9528%" y="373" width="0.2202%" height="15" fill="rgb(206,111,30)" fg:x="35701" fg:w="114"/><text x="69.2028%" y="383.50"></text></g><g><title>evolu`&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,333 samples, 2.57%)</title><rect x="81.9781%" y="357" width="2.5746%" height="15" fill="rgb(243,70,54)" fg:x="42445" fg:w="1333"/><text x="82.2281%" y="367.50">ev..</text></g><g><title>evolu`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="84.5527%" y="357" width="0.0212%" height="15" fill="rgb(242,28,8)" fg:x="43778" fg:w="11"/><text x="84.8027%" y="367.50"></text></g><g><title>evolu`&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006 samples, 3.87%)</title><rect x="86.6753%" y="341" width="3.8744%" height="15" fill="rgb(219,106,18)" fg:x="44877" fg:w="2006"/><text x="86.9253%" y="351.50">evol..</text></g><g><title>evolu`&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::clone::Clone&gt;::clone (132 samples, 0.25%)</title><rect x="90.5497%" y="341" width="0.2549%" height="15" fill="rgb(244,222,10)" fg:x="46883" fg:w="132"/><text x="90.7997%" y="351.50"></text></g><g><title>evolu`&lt;itertools::adaptors::TupleCombinations&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,491 samples, 6.74%)</title><rect x="84.5739%" y="357" width="6.7425%" height="15" fill="rgb(236,179,52)" fg:x="43789" fg:w="3491"/><text x="84.8239%" y="367.50">evolu`&lt;it..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (265 samples, 0.51%)</title><rect x="90.8046%" y="341" width="0.5118%" height="15" fill="rgb(213,23,39)" fg:x="47015" fg:w="265"/><text x="91.0546%" y="351.50"></text></g><g><title>evolu`DYLD-STUB$$memcpy (10 samples, 0.02%)</title><rect x="91.3164%" y="357" width="0.0193%" height="15" fill="rgb(238,48,10)" fg:x="47280" fg:w="10"/><text x="91.5664%" y="367.50"></text></g><g><title>evolu`core::ops::function::FnOnce::call_once (23 samples, 0.04%)</title><rect x="91.3358%" y="357" width="0.0444%" height="15" fill="rgb(251,196,23)" fg:x="47290" fg:w="23"/><text x="91.5858%" y="367.50"></text></g><g><title>evolu`evolu::model::world::bone::Bone::update (497 samples, 0.96%)</title><rect x="91.3802%" y="357" width="0.9599%" height="15" fill="rgb(250,152,24)" fg:x="47313" fg:w="497"/><text x="91.6302%" y="367.50"></text></g><g><title>evolu`evolu::model::world::muscle::Muscle::update (342 samples, 0.66%)</title><rect x="92.3401%" y="357" width="0.6605%" height="15" fill="rgb(209,150,17)" fg:x="47810" fg:w="342"/><text x="92.5901%" y="367.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8108c8d70 (300 samples, 0.58%)</title><rect x="93.0006%" y="357" width="0.5794%" height="15" fill="rgb(234,202,34)" fg:x="48152" fg:w="300"/><text x="93.2506%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (19 samples, 0.04%)</title><rect x="93.5839%" y="357" width="0.0367%" height="15" fill="rgb(253,148,53)" fg:x="48454" fg:w="19"/><text x="93.8339%" y="367.50"></text></g><g><title>evolu`evolu::model::world::World::update (12,850 samples, 24.82%)</title><rect x="69.1749%" y="373" width="24.8184%" height="15" fill="rgb(218,129,16)" fg:x="35816" fg:w="12850"/><text x="69.4249%" y="383.50">evolu`evolu::model::world::World::update</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (193 samples, 0.37%)</title><rect x="93.6206%" y="357" width="0.3728%" height="15" fill="rgb(216,85,19)" fg:x="48473" fg:w="193"/><text x="93.8706%" y="367.50"></text></g><g><title>evolu`evolu::model::world::bone::Bone::update (8 samples, 0.02%)</title><rect x="93.9934%" y="373" width="0.0155%" height="15" fill="rgb(235,228,7)" fg:x="48666" fg:w="8"/><text x="94.2434%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (11 samples, 0.02%)</title><rect x="94.0127%" y="373" width="0.0212%" height="15" fill="rgb(245,175,0)" fg:x="48676" fg:w="11"/><text x="94.2627%" y="383.50"></text></g><g><title>evolu`evolu::update (13,021 samples, 25.15%)</title><rect x="68.9412%" y="389" width="25.1487%" height="15" fill="rgb(208,168,36)" fg:x="35695" fg:w="13021"/><text x="69.1912%" y="399.50">evolu`evolu::update</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.06%)</title><rect x="94.0339%" y="373" width="0.0560%" height="15" fill="rgb(246,171,24)" fg:x="48687" fg:w="29"/><text x="94.2839%" y="383.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (13 samples, 0.03%)</title><rect x="94.0899%" y="373" width="0.0251%" height="15" fill="rgb(215,142,24)" fg:x="48716" fg:w="13"/><text x="94.3399%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (12 samples, 0.02%)</title><rect x="94.0919%" y="357" width="0.0232%" height="15" fill="rgb(250,187,7)" fg:x="48717" fg:w="12"/><text x="94.3419%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (12 samples, 0.02%)</title><rect x="94.0919%" y="341" width="0.0232%" height="15" fill="rgb(228,66,33)" fg:x="48717" fg:w="12"/><text x="94.3419%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (12 samples, 0.02%)</title><rect x="94.0919%" y="325" width="0.0232%" height="15" fill="rgb(234,215,21)" fg:x="48717" fg:w="12"/><text x="94.3419%" y="335.50"></text></g><g><title>evolu`winit::platform_impl::platform::app_state::AppState::queue_redraw (14 samples, 0.03%)</title><rect x="94.0899%" y="389" width="0.0270%" height="15" fill="rgb(222,191,20)" fg:x="48716" fg:w="14"/><text x="94.3399%" y="399.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (14 samples, 0.03%)</title><rect x="94.1208%" y="389" width="0.0270%" height="15" fill="rgb(245,79,54)" fg:x="48732" fg:w="14"/><text x="94.3708%" y="399.50"></text></g><g><title>evolu`nannou::app::apply_update (28,673 samples, 55.38%)</title><rect x="38.8423%" y="405" width="55.3789%" height="15" fill="rgb(240,10,37)" fg:x="20111" fg:w="28673"/><text x="39.0923%" y="415.50">evolu`nannou::app::apply_update</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (38 samples, 0.07%)</title><rect x="94.1479%" y="389" width="0.0734%" height="15" fill="rgb(214,192,32)" fg:x="48746" fg:w="38"/><text x="94.3979%" y="399.50"></text></g><g><title>QuartzCore`0x7ff80c8db5d3 (10 samples, 0.02%)</title><rect x="94.3101%" y="293" width="0.0193%" height="15" fill="rgb(209,36,54)" fg:x="48830" fg:w="10"/><text x="94.5601%" y="303.50"></text></g><g><title>QuartzCore`0x7ff80c8d8153 (10 samples, 0.02%)</title><rect x="94.3101%" y="277" width="0.0193%" height="15" fill="rgb(220,10,11)" fg:x="48830" fg:w="10"/><text x="94.5601%" y="287.50"></text></g><g><title>QuartzCore`0x7ff80c8acc8f (18 samples, 0.03%)</title><rect x="94.3043%" y="309" width="0.0348%" height="15" fill="rgb(221,106,17)" fg:x="48827" fg:w="18"/><text x="94.5543%" y="319.50"></text></g><g><title>QuartzCore`0x7ff80c8affb3 (25 samples, 0.05%)</title><rect x="94.2927%" y="325" width="0.0483%" height="15" fill="rgb(251,142,44)" fg:x="48821" fg:w="25"/><text x="94.5427%" y="335.50"></text></g><g><title>QuartzCore`0x7ff80c8b0078 (9 samples, 0.02%)</title><rect x="94.3410%" y="325" width="0.0174%" height="15" fill="rgb(238,13,15)" fg:x="48846" fg:w="9"/><text x="94.5910%" y="335.50"></text></g><g><title>QuartzCore`0x7ff80c8b01cf (22 samples, 0.04%)</title><rect x="94.3680%" y="325" width="0.0425%" height="15" fill="rgb(208,107,27)" fg:x="48860" fg:w="22"/><text x="94.6180%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (22 samples, 0.04%)</title><rect x="94.3680%" y="309" width="0.0425%" height="15" fill="rgb(205,136,37)" fg:x="48860" fg:w="22"/><text x="94.6180%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (22 samples, 0.04%)</title><rect x="94.3680%" y="293" width="0.0425%" height="15" fill="rgb(250,205,27)" fg:x="48860" fg:w="22"/><text x="94.6180%" y="303.50"></text></g><g><title>IOKit`0x7ff807e0d773 (38 samples, 0.07%)</title><rect x="94.4376%" y="261" width="0.0734%" height="15" fill="rgb(210,80,43)" fg:x="48896" fg:w="38"/><text x="94.6876%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (38 samples, 0.07%)</title><rect x="94.4376%" y="245" width="0.0734%" height="15" fill="rgb(247,160,36)" fg:x="48896" fg:w="38"/><text x="94.6876%" y="255.50"></text></g><g><title>IOSurface`0x7ff80e2705e3 (42 samples, 0.08%)</title><rect x="94.4337%" y="293" width="0.0811%" height="15" fill="rgb(234,13,49)" fg:x="48894" fg:w="42"/><text x="94.6837%" y="303.50"></text></g><g><title>IOKit`0x7ff807e0d573 (42 samples, 0.08%)</title><rect x="94.4337%" y="277" width="0.0811%" height="15" fill="rgb(234,122,0)" fg:x="48894" fg:w="42"/><text x="94.6837%" y="287.50"></text></g><g><title>IOSurface`0x7ff80e270651 (10 samples, 0.02%)</title><rect x="94.5148%" y="293" width="0.0193%" height="15" fill="rgb(207,146,38)" fg:x="48936" fg:w="10"/><text x="94.7648%" y="303.50"></text></g><g><title>IOKit`0x7ff807e0d573 (10 samples, 0.02%)</title><rect x="94.5148%" y="277" width="0.0193%" height="15" fill="rgb(207,177,25)" fg:x="48936" fg:w="10"/><text x="94.7648%" y="287.50"></text></g><g><title>IOKit`0x7ff807e0d773 (10 samples, 0.02%)</title><rect x="94.5148%" y="261" width="0.0193%" height="15" fill="rgb(211,178,42)" fg:x="48936" fg:w="10"/><text x="94.7648%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.02%)</title><rect x="94.5168%" y="245" width="0.0174%" height="15" fill="rgb(230,69,54)" fg:x="48937" fg:w="9"/><text x="94.7668%" y="255.50"></text></g><g><title>QuartzCore`0x7ff80c8b04b0 (61 samples, 0.12%)</title><rect x="94.4202%" y="325" width="0.1178%" height="15" fill="rgb(214,135,41)" fg:x="48887" fg:w="61"/><text x="94.6702%" y="335.50"></text></g><g><title>QuartzCore`0x7ff80c8b28cf (54 samples, 0.10%)</title><rect x="94.4337%" y="309" width="0.1043%" height="15" fill="rgb(237,67,25)" fg:x="48894" fg:w="54"/><text x="94.6837%" y="319.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (135 samples, 0.26%)</title><rect x="94.2850%" y="341" width="0.2607%" height="15" fill="rgb(222,189,50)" fg:x="48817" fg:w="135"/><text x="94.5350%" y="351.50"></text></g><g><title>evolu`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (141 samples, 0.27%)</title><rect x="94.2792%" y="373" width="0.2723%" height="15" fill="rgb(245,148,34)" fg:x="48814" fg:w="141"/><text x="94.5292%" y="383.50"></text></g><g><title>evolu`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (139 samples, 0.27%)</title><rect x="94.2831%" y="357" width="0.2685%" height="15" fill="rgb(222,29,6)" fg:x="48816" fg:w="139"/><text x="94.5331%" y="367.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (146 samples, 0.28%)</title><rect x="94.2734%" y="389" width="0.2820%" height="15" fill="rgb(221,189,43)" fg:x="48811" fg:w="146"/><text x="94.5234%" y="399.50"></text></g><g><title>evolu`wgpu::Surface::get_current_texture (148 samples, 0.29%)</title><rect x="94.2715%" y="405" width="0.2858%" height="15" fill="rgb(207,36,27)" fg:x="48810" fg:w="148"/><text x="94.5215%" y="415.50"></text></g><g><title>Metal`0x7ff80e2aa7af (16 samples, 0.03%)</title><rect x="94.5612%" y="293" width="0.0309%" height="15" fill="rgb(217,90,24)" fg:x="48960" fg:w="16"/><text x="94.8112%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (16 samples, 0.03%)</title><rect x="94.5612%" y="277" width="0.0309%" height="15" fill="rgb(224,66,35)" fg:x="48960" fg:w="16"/><text x="94.8112%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (16 samples, 0.03%)</title><rect x="94.5612%" y="261" width="0.0309%" height="15" fill="rgb(221,13,50)" fg:x="48960" fg:w="16"/><text x="94.8112%" y="271.50"></text></g><g><title>Metal`0x7ff80e2aa484 (19 samples, 0.04%)</title><rect x="94.5573%" y="309" width="0.0367%" height="15" fill="rgb(236,68,49)" fg:x="48958" fg:w="19"/><text x="94.8073%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer commit] (20 samples, 0.04%)</title><rect x="94.5573%" y="325" width="0.0386%" height="15" fill="rgb(229,146,28)" fg:x="48958" fg:w="20"/><text x="94.8073%" y="335.50"></text></g><g><title>CoreFoundation`+[NSDictionary dictionaryWithObjects:forKeys:count:] (13 samples, 0.03%)</title><rect x="94.6017%" y="293" width="0.0251%" height="15" fill="rgb(225,31,38)" fg:x="48981" fg:w="13"/><text x="94.8517%" y="303.50"></text></g><g><title>Metal`0x7ff80e3b229b (14 samples, 0.03%)</title><rect x="94.6017%" y="309" width="0.0270%" height="15" fill="rgb(250,208,3)" fg:x="48981" fg:w="14"/><text x="94.8517%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer presentDrawable:] (29 samples, 0.06%)</title><rect x="94.5960%" y="325" width="0.0560%" height="15" fill="rgb(246,54,23)" fg:x="48978" fg:w="29"/><text x="94.8460%" y="335.50"></text></g><g><title>Metal`0x7ff80e3b22ae (12 samples, 0.02%)</title><rect x="94.6288%" y="309" width="0.0232%" height="15" fill="rgb(243,76,11)" fg:x="48995" fg:w="12"/><text x="94.8788%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (11 samples, 0.02%)</title><rect x="94.6520%" y="309" width="0.0212%" height="15" fill="rgb(245,21,50)" fg:x="49007" fg:w="11"/><text x="94.9020%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandQueue commandBuffer] (13 samples, 0.03%)</title><rect x="94.6520%" y="325" width="0.0251%" height="15" fill="rgb(228,9,43)" fg:x="49007" fg:w="13"/><text x="94.9020%" y="335.50"></text></g><g><title>evolu`objc::rc::autorelease::autoreleasepool (67 samples, 0.13%)</title><rect x="94.5573%" y="341" width="0.1294%" height="15" fill="rgb(208,100,47)" fg:x="48958" fg:w="67"/><text x="94.8073%" y="351.50"></text></g><g><title>evolu`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (69 samples, 0.13%)</title><rect x="94.5573%" y="357" width="0.1333%" height="15" fill="rgb(232,26,8)" fg:x="48958" fg:w="69"/><text x="94.8073%" y="367.50"></text></g><g><title>evolu`wgpu::SurfaceTexture::present (73 samples, 0.14%)</title><rect x="94.5573%" y="405" width="0.1410%" height="15" fill="rgb(216,166,38)" fg:x="48958" fg:w="73"/><text x="94.8073%" y="415.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (73 samples, 0.14%)</title><rect x="94.5573%" y="389" width="0.1410%" height="15" fill="rgb(251,202,51)" fg:x="48958" fg:w="73"/><text x="94.8073%" y="399.50"></text></g><g><title>evolu`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (73 samples, 0.14%)</title><rect x="94.5573%" y="373" width="0.1410%" height="15" fill="rgb(254,216,34)" fg:x="48958" fg:w="73"/><text x="94.8073%" y="383.50"></text></g><g><title>evolu`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (7 samples, 0.01%)</title><rect x="94.6983%" y="373" width="0.0135%" height="15" fill="rgb(251,32,27)" fg:x="49031" fg:w="7"/><text x="94.9483%" y="383.50"></text></g><g><title>evolu`wgpu::Texture::create_view (8 samples, 0.02%)</title><rect x="94.6983%" y="405" width="0.0155%" height="15" fill="rgb(208,127,28)" fg:x="49031" fg:w="8"/><text x="94.9483%" y="415.50"></text></g><g><title>evolu`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::texture_create_view (8 samples, 0.02%)</title><rect x="94.6983%" y="389" width="0.0155%" height="15" fill="rgb(224,137,22)" fg:x="49031" fg:w="8"/><text x="94.9483%" y="399.50"></text></g><g><title>evolu`nannou::app::run_loop::_{{closure}} (48,871 samples, 94.39%)</title><rect x="0.3264%" y="421" width="94.3893%" height="15" fill="rgb(254,70,32)" fg:x="169" fg:w="48871"/><text x="0.5764%" y="431.50">evolu`nannou::app::run_loop::_{{closure}}</text></g><g><title>evolu`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (48,872 samples, 94.39%)</title><rect x="0.3264%" y="437" width="94.3912%" height="15" fill="rgb(229,75,37)" fg:x="169" fg:w="48872"/><text x="0.5764%" y="447.50">evolu`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event</text></g><g><title>evolu`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (48,874 samples, 94.40%)</title><rect x="0.3245%" y="453" width="94.3951%" height="15" fill="rgb(252,64,23)" fg:x="168" fg:w="48874"/><text x="0.5745%" y="463.50">evolu`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>evolu`winit::platform_impl::platform::app_state::AppState::cleared (48,882 samples, 94.41%)</title><rect x="0.3129%" y="469" width="94.4105%" height="15" fill="rgb(232,162,48)" fg:x="162" fg:w="48882"/><text x="0.5629%" y="479.50">evolu`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>evolu`std::panicking::try (48,888 samples, 94.42%)</title><rect x="0.3071%" y="485" width="94.4221%" height="15" fill="rgb(246,160,12)" fg:x="159" fg:w="48888"/><text x="0.5571%" y="495.50">evolu`std::panicking::try</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (48,920 samples, 94.48%)</title><rect x="0.2472%" y="517" width="94.4839%" height="15" fill="rgb(247,166,0)" fg:x="128" fg:w="48920"/><text x="0.4972%" y="527.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>evolu`winit::platform_impl::platform::observer::control_flow_end_handler (48,889 samples, 94.42%)</title><rect x="0.3071%" y="501" width="94.4241%" height="15" fill="rgb(249,219,21)" fg:x="159" fg:w="48889"/><text x="0.5571%" y="511.50">evolu`winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (48,926 samples, 94.50%)</title><rect x="0.2434%" y="533" width="94.4955%" height="15" fill="rgb(205,209,3)" fg:x="126" fg:w="48926"/><text x="0.4934%" y="543.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>HIServices`0x7ff80a6534df (6 samples, 0.01%)</title><rect x="94.7408%" y="469" width="0.0116%" height="15" fill="rgb(243,44,1)" fg:x="49053" fg:w="6"/><text x="94.9908%" y="479.50"></text></g><g><title>HIServices`0x7ff80a653012 (6 samples, 0.01%)</title><rect x="94.7408%" y="453" width="0.0116%" height="15" fill="rgb(206,159,16)" fg:x="49053" fg:w="6"/><text x="94.9908%" y="463.50"></text></g><g><title>HIToolbox`HIObject::EventHook (18 samples, 0.03%)</title><rect x="94.7543%" y="229" width="0.0348%" height="15" fill="rgb(244,77,30)" fg:x="49060" fg:w="18"/><text x="95.0043%" y="239.50"></text></g><g><title>HIToolbox`HIObject::HandleClassAccessibilityEvent (18 samples, 0.03%)</title><rect x="94.7543%" y="213" width="0.0348%" height="15" fill="rgb(218,69,12)" fg:x="49060" fg:w="18"/><text x="95.0043%" y="223.50"></text></g><g><title>HIToolbox`HIObject::DispatchAccessibilityEvent (18 samples, 0.03%)</title><rect x="94.7543%" y="197" width="0.0348%" height="15" fill="rgb(212,87,7)" fg:x="49060" fg:w="18"/><text x="95.0043%" y="207.50"></text></g><g><title>HIToolbox`MenuData::GetNamedAccessibleAttributeSelf (16 samples, 0.03%)</title><rect x="94.7582%" y="181" width="0.0309%" height="15" fill="rgb(245,114,25)" fg:x="49062" fg:w="16"/><text x="95.0082%" y="191.50"></text></g><g><title>HIToolbox`MenuData::HandleGetNamedAccessibleAttribute (11 samples, 0.02%)</title><rect x="94.7678%" y="165" width="0.0212%" height="15" fill="rgb(210,61,42)" fg:x="49067" fg:w="11"/><text x="95.0178%" y="175.50"></text></g><g><title>HIToolbox`OpenMenuForInspection(MenuData*) (11 samples, 0.02%)</title><rect x="94.7678%" y="149" width="0.0212%" height="15" fill="rgb(211,52,33)" fg:x="49067" fg:w="11"/><text x="95.0178%" y="159.50"></text></g><g><title>HIToolbox`_SimulateMenuOpening (11 samples, 0.02%)</title><rect x="94.7678%" y="133" width="0.0212%" height="15" fill="rgb(234,58,33)" fg:x="49067" fg:w="11"/><text x="95.0178%" y="143.50"></text></g><g><title>HIToolbox`SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned int, unsigned int, __CFDictionary*, unsigned char, unsigned char*) (11 samples, 0.02%)</title><rect x="94.7678%" y="117" width="0.0212%" height="15" fill="rgb(220,115,36)" fg:x="49067" fg:w="11"/><text x="95.0178%" y="127.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (10 samples, 0.02%)</title><rect x="94.7698%" y="101" width="0.0193%" height="15" fill="rgb(243,153,54)" fg:x="49068" fg:w="10"/><text x="95.0198%" y="111.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (10 samples, 0.02%)</title><rect x="94.7698%" y="85" width="0.0193%" height="15" fill="rgb(251,47,18)" fg:x="49068" fg:w="10"/><text x="95.0198%" y="95.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (10 samples, 0.02%)</title><rect x="94.7698%" y="69" width="0.0193%" height="15" fill="rgb(242,102,42)" fg:x="49068" fg:w="10"/><text x="95.0198%" y="79.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (10 samples, 0.02%)</title><rect x="94.7698%" y="53" width="0.0193%" height="15" fill="rgb(234,31,38)" fg:x="49068" fg:w="10"/><text x="95.0198%" y="63.50"></text></g><g><title>HIToolbox`AppleMenuHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (10 samples, 0.02%)</title><rect x="94.7698%" y="37" width="0.0193%" height="15" fill="rgb(221,117,51)" fg:x="49068" fg:w="10"/><text x="95.0198%" y="47.50"></text></g><g><title>AppKit`NSSLMMenuEventHandler (19 samples, 0.04%)</title><rect x="94.7543%" y="309" width="0.0367%" height="15" fill="rgb(212,20,18)" fg:x="49060" fg:w="19"/><text x="95.0043%" y="319.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl _carbonGetAccessibleAttributeEvent:handlerCallRef:axElement:] (19 samples, 0.04%)</title><rect x="94.7543%" y="293" width="0.0367%" height="15" fill="rgb(245,133,36)" fg:x="49060" fg:w="19"/><text x="95.0043%" y="303.50"></text></g><g><title>HIToolbox`CallNextEventHandler (19 samples, 0.04%)</title><rect x="94.7543%" y="277" width="0.0367%" height="15" fill="rgb(212,6,19)" fg:x="49060" fg:w="19"/><text x="95.0043%" y="287.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (19 samples, 0.04%)</title><rect x="94.7543%" y="261" width="0.0367%" height="15" fill="rgb(218,1,36)" fg:x="49060" fg:w="19"/><text x="95.0043%" y="271.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (19 samples, 0.04%)</title><rect x="94.7543%" y="245" width="0.0367%" height="15" fill="rgb(246,84,54)" fg:x="49060" fg:w="19"/><text x="95.0043%" y="255.50"></text></g><g><title>HIToolbox`Accessible::GetNamedAttributeData (20 samples, 0.04%)</title><rect x="94.7543%" y="389" width="0.0386%" height="15" fill="rgb(242,110,6)" fg:x="49060" fg:w="20"/><text x="95.0043%" y="399.50"></text></g><g><title>HIToolbox`Accessible::SendEvent (20 samples, 0.04%)</title><rect x="94.7543%" y="373" width="0.0386%" height="15" fill="rgb(214,47,5)" fg:x="49060" fg:w="20"/><text x="95.0043%" y="383.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (20 samples, 0.04%)</title><rect x="94.7543%" y="357" width="0.0386%" height="15" fill="rgb(218,159,25)" fg:x="49060" fg:w="20"/><text x="95.0043%" y="367.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (20 samples, 0.04%)</title><rect x="94.7543%" y="341" width="0.0386%" height="15" fill="rgb(215,211,28)" fg:x="49060" fg:w="20"/><text x="95.0043%" y="351.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (20 samples, 0.04%)</title><rect x="94.7543%" y="325" width="0.0386%" height="15" fill="rgb(238,59,32)" fg:x="49060" fg:w="20"/><text x="95.0043%" y="335.50"></text></g><g><title>HIServices`0x7ff80a6536c5 (22 samples, 0.04%)</title><rect x="94.7543%" y="469" width="0.0425%" height="15" fill="rgb(226,82,3)" fg:x="49060" fg:w="22"/><text x="95.0043%" y="479.50"></text></g><g><title>AppKit`CopyAttributeValue (22 samples, 0.04%)</title><rect x="94.7543%" y="453" width="0.0425%" height="15" fill="rgb(240,164,32)" fg:x="49060" fg:w="22"/><text x="95.0043%" y="463.50"></text></g><g><title>AppKit`CopyCarbonUIElementAttributeValue (22 samples, 0.04%)</title><rect x="94.7543%" y="437" width="0.0425%" height="15" fill="rgb(232,46,7)" fg:x="49060" fg:w="22"/><text x="95.0043%" y="447.50"></text></g><g><title>HIToolbox`CarbonCopyAttributeValueCallback(__CFData const*, unsigned int, __CFString const*, void const**, void*) (22 samples, 0.04%)</title><rect x="94.7543%" y="421" width="0.0425%" height="15" fill="rgb(229,129,53)" fg:x="49060" fg:w="22"/><text x="95.0043%" y="431.50"></text></g><g><title>HIToolbox`HLTBCopyUIElementAttributeValue (22 samples, 0.04%)</title><rect x="94.7543%" y="405" width="0.0425%" height="15" fill="rgb(234,188,29)" fg:x="49060" fg:w="22"/><text x="95.0043%" y="415.50"></text></g><g><title>HIServices`0x7ff80a6345a9 (30 samples, 0.06%)</title><rect x="94.7408%" y="501" width="0.0579%" height="15" fill="rgb(246,141,4)" fg:x="49053" fg:w="30"/><text x="94.9908%" y="511.50"></text></g><g><title>HIServices`0x7ff80a6762e5 (30 samples, 0.06%)</title><rect x="94.7408%" y="485" width="0.0579%" height="15" fill="rgb(229,23,39)" fg:x="49053" fg:w="30"/><text x="94.9908%" y="495.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (34 samples, 0.07%)</title><rect x="94.7389%" y="533" width="0.0657%" height="15" fill="rgb(206,12,3)" fg:x="49052" fg:w="34"/><text x="94.9889%" y="543.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (33 samples, 0.06%)</title><rect x="94.7408%" y="517" width="0.0637%" height="15" fill="rgb(252,226,20)" fg:x="49053" fg:w="33"/><text x="94.9908%" y="527.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (7 samples, 0.01%)</title><rect x="95.1889%" y="501" width="0.0135%" height="15" fill="rgb(216,123,35)" fg:x="49285" fg:w="7"/><text x="95.4389%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (6 samples, 0.01%)</title><rect x="95.1908%" y="485" width="0.0116%" height="15" fill="rgb(212,68,40)" fg:x="49286" fg:w="6"/><text x="95.4408%" y="495.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (208 samples, 0.40%)</title><rect x="94.8084%" y="533" width="0.4017%" height="15" fill="rgb(254,125,32)" fg:x="49088" fg:w="208"/><text x="95.0584%" y="543.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (205 samples, 0.40%)</title><rect x="94.8142%" y="517" width="0.3959%" height="15" fill="rgb(253,97,22)" fg:x="49091" fg:w="205"/><text x="95.0642%" y="527.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (15 samples, 0.03%)</title><rect x="95.2121%" y="533" width="0.0290%" height="15" fill="rgb(241,101,14)" fg:x="49297" fg:w="15"/><text x="95.4621%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (12 samples, 0.02%)</title><rect x="95.2179%" y="517" width="0.0232%" height="15" fill="rgb(238,103,29)" fg:x="49300" fg:w="12"/><text x="95.4679%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (12 samples, 0.02%)</title><rect x="95.2179%" y="501" width="0.0232%" height="15" fill="rgb(233,195,47)" fg:x="49300" fg:w="12"/><text x="95.4679%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.02%)</title><rect x="95.2198%" y="485" width="0.0212%" height="15" fill="rgb(246,218,30)" fg:x="49301" fg:w="11"/><text x="95.4698%" y="495.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (49,217 samples, 95.06%)</title><rect x="0.2047%" y="549" width="95.0576%" height="15" fill="rgb(219,145,47)" fg:x="106" fg:w="49217"/><text x="0.4547%" y="559.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (49,224 samples, 95.07%)</title><rect x="0.1931%" y="565" width="95.0711%" height="15" fill="rgb(243,12,26)" fg:x="100" fg:w="49224"/><text x="0.4431%" y="575.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (49,230 samples, 95.08%)</title><rect x="0.1931%" y="581" width="95.0827%" height="15" fill="rgb(214,87,16)" fg:x="100" fg:w="49230"/><text x="0.4431%" y="591.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>dyld`start (49,329 samples, 95.27%)</title><rect x="0.0039%" y="805" width="95.2739%" height="15" fill="rgb(208,99,42)" fg:x="2" fg:w="49329"/><text x="0.2539%" y="815.50">dyld`start</text></g><g><title>evolu`main (49,329 samples, 95.27%)</title><rect x="0.0039%" y="789" width="95.2739%" height="15" fill="rgb(253,99,2)" fg:x="2" fg:w="49329"/><text x="0.2539%" y="799.50">evolu`main</text></g><g><title>evolu`std::rt::lang_start_internal (49,329 samples, 95.27%)</title><rect x="0.0039%" y="773" width="95.2739%" height="15" fill="rgb(220,168,23)" fg:x="2" fg:w="49329"/><text x="0.2539%" y="783.50">evolu`std::rt::lang_start_internal</text></g><g><title>evolu`std::rt::lang_start::_{{closure}} (49,329 samples, 95.27%)</title><rect x="0.0039%" y="757" width="95.2739%" height="15" fill="rgb(242,38,24)" fg:x="2" fg:w="49329"/><text x="0.2539%" y="767.50">evolu`std::rt::lang_start::_{{closure}}</text></g><g><title>evolu`std::sys_common::backtrace::__rust_begin_short_backtrace (49,329 samples, 95.27%)</title><rect x="0.0039%" y="741" width="95.2739%" height="15" fill="rgb(225,182,9)" fg:x="2" fg:w="49329"/><text x="0.2539%" y="751.50">evolu`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>evolu`evolu::main (49,329 samples, 95.27%)</title><rect x="0.0039%" y="725" width="95.2739%" height="15" fill="rgb(243,178,37)" fg:x="2" fg:w="49329"/><text x="0.2539%" y="735.50">evolu`evolu::main</text></g><g><title>evolu`nannou::app::Builder&lt;M,E&gt;::run (49,329 samples, 95.27%)</title><rect x="0.0039%" y="709" width="95.2739%" height="15" fill="rgb(232,139,19)" fg:x="2" fg:w="49329"/><text x="0.2539%" y="719.50">evolu`nannou::app::Builder&lt;M,E&gt;::run</text></g><g><title>evolu`winit::event_loop::EventLoop&lt;T&gt;::run (49,273 samples, 95.17%)</title><rect x="0.1120%" y="693" width="95.1657%" height="15" fill="rgb(225,201,24)" fg:x="58" fg:w="49273"/><text x="0.3620%" y="703.50">evolu`winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>evolu`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (49,273 samples, 95.17%)</title><rect x="0.1120%" y="677" width="95.1657%" height="15" fill="rgb(221,47,46)" fg:x="58" fg:w="49273"/><text x="0.3620%" y="687.50">evolu`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>AppKit`-[NSApplication run] (49,273 samples, 95.17%)</title><rect x="0.1120%" y="661" width="95.1657%" height="15" fill="rgb(249,23,13)" fg:x="58" fg:w="49273"/><text x="0.3620%" y="671.50">AppKit`-[NSApplication run]</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (49,256 samples, 95.13%)</title><rect x="0.1449%" y="645" width="95.1329%" height="15" fill="rgb(219,9,5)" fg:x="75" fg:w="49256"/><text x="0.3949%" y="655.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>AppKit`_DPSNextEvent (49,256 samples, 95.13%)</title><rect x="0.1449%" y="629" width="95.1329%" height="15" fill="rgb(254,171,16)" fg:x="75" fg:w="49256"/><text x="0.3949%" y="639.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (49,246 samples, 95.11%)</title><rect x="0.1642%" y="613" width="95.1136%" height="15" fill="rgb(230,171,20)" fg:x="85" fg:w="49246"/><text x="0.4142%" y="623.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (49,246 samples, 95.11%)</title><rect x="0.1642%" y="597" width="95.1136%" height="15" fill="rgb(210,71,41)" fg:x="85" fg:w="49246"/><text x="0.4142%" y="607.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (9 samples, 0.02%)</title><rect x="95.2777%" y="805" width="0.0174%" height="15" fill="rgb(206,173,20)" fg:x="49331" fg:w="9"/><text x="95.5277%" y="815.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (9 samples, 0.02%)</title><rect x="95.2970%" y="805" width="0.0174%" height="15" fill="rgb(233,88,34)" fg:x="49341" fg:w="9"/><text x="95.5470%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (618 samples, 1.19%)</title><rect x="95.4284%" y="789" width="1.1936%" height="15" fill="rgb(223,209,46)" fg:x="49409" fg:w="618"/><text x="95.6784%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (10 samples, 0.02%)</title><rect x="96.8267%" y="741" width="0.0193%" height="15" fill="rgb(250,43,18)" fg:x="50133" fg:w="10"/><text x="97.0767%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (21 samples, 0.04%)</title><rect x="96.8171%" y="757" width="0.0406%" height="15" fill="rgb(208,13,10)" fg:x="50128" fg:w="21"/><text x="97.0671%" y="767.50"></text></g><g><title>QuartzCore`0x7ff80cad9475 (6 samples, 0.01%)</title><rect x="96.9194%" y="693" width="0.0116%" height="15" fill="rgb(212,200,36)" fg:x="50181" fg:w="6"/><text x="97.1694%" y="703.50"></text></g><g><title>QuartzCore`0x7ff80c8d8292 (40 samples, 0.08%)</title><rect x="96.9523%" y="645" width="0.0773%" height="15" fill="rgb(225,90,30)" fg:x="50198" fg:w="40"/><text x="97.2023%" y="655.50"></text></g><g><title>IOSurface`0x7ff80e270dc1 (39 samples, 0.08%)</title><rect x="96.9542%" y="629" width="0.0753%" height="15" fill="rgb(236,182,39)" fg:x="50199" fg:w="39"/><text x="97.2042%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (39 samples, 0.08%)</title><rect x="96.9542%" y="613" width="0.0753%" height="15" fill="rgb(212,144,35)" fg:x="50199" fg:w="39"/><text x="97.2042%" y="623.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (46 samples, 0.09%)</title><rect x="96.9503%" y="661" width="0.0888%" height="15" fill="rgb(228,63,44)" fg:x="50197" fg:w="46"/><text x="97.2003%" y="671.50"></text></g><g><title>QuartzCore`0x7ff80cad9816 (47 samples, 0.09%)</title><rect x="96.9503%" y="693" width="0.0908%" height="15" fill="rgb(228,109,6)" fg:x="50197" fg:w="47"/><text x="97.2003%" y="703.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (47 samples, 0.09%)</title><rect x="96.9503%" y="677" width="0.0908%" height="15" fill="rgb(238,117,24)" fg:x="50197" fg:w="47"/><text x="97.2003%" y="687.50"></text></g><g><title>QuartzCore`0x7ff80cb0dec4 (74 samples, 0.14%)</title><rect x="96.9078%" y="709" width="0.1429%" height="15" fill="rgb(242,26,26)" fg:x="50175" fg:w="74"/><text x="97.1578%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (6 samples, 0.01%)</title><rect x="97.0546%" y="709" width="0.0116%" height="15" fill="rgb(221,92,48)" fg:x="50251" fg:w="6"/><text x="97.3046%" y="719.50"></text></g><g><title>libsystem_blocks.dylib`0x7ff804aca579 (6 samples, 0.01%)</title><rect x="97.0739%" y="709" width="0.0116%" height="15" fill="rgb(209,209,32)" fg:x="50261" fg:w="6"/><text x="97.3239%" y="719.50"></text></g><g><title>libsystem_blocks.dylib`0x7ff804aca582 (8 samples, 0.02%)</title><rect x="97.0855%" y="709" width="0.0155%" height="15" fill="rgb(221,70,22)" fg:x="50267" fg:w="8"/><text x="97.3355%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (8 samples, 0.02%)</title><rect x="97.0855%" y="693" width="0.0155%" height="15" fill="rgb(248,145,5)" fg:x="50267" fg:w="8"/><text x="97.3355%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.01%)</title><rect x="97.1010%" y="693" width="0.0135%" height="15" fill="rgb(226,116,26)" fg:x="50275" fg:w="7"/><text x="97.3510%" y="703.50"></text></g><g><title>libsystem_blocks.dylib`0x7ff804aca58a (10 samples, 0.02%)</title><rect x="97.1010%" y="709" width="0.0193%" height="15" fill="rgb(244,5,17)" fg:x="50275" fg:w="10"/><text x="97.3510%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (118 samples, 0.23%)</title><rect x="96.9040%" y="725" width="0.2279%" height="15" fill="rgb(252,159,33)" fg:x="50173" fg:w="118"/><text x="97.1540%" y="735.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (10 samples, 0.02%)</title><rect x="97.2207%" y="645" width="0.0193%" height="15" fill="rgb(206,71,0)" fg:x="50337" fg:w="10"/><text x="97.4707%" y="655.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (17 samples, 0.03%)</title><rect x="97.2169%" y="661" width="0.0328%" height="15" fill="rgb(233,118,54)" fg:x="50335" fg:w="17"/><text x="97.4669%" y="671.50"></text></g><g><title>Metal`0x7ff80e2aabe9 (21 samples, 0.04%)</title><rect x="97.2169%" y="677" width="0.0406%" height="15" fill="rgb(234,83,48)" fg:x="50335" fg:w="21"/><text x="97.4669%" y="687.50"></text></g><g><title>Metal`0x7ff80e2aae67 (6 samples, 0.01%)</title><rect x="97.2651%" y="661" width="0.0116%" height="15" fill="rgb(228,3,54)" fg:x="50360" fg:w="6"/><text x="97.5151%" y="671.50"></text></g><g><title>IOKit`0x7ff807e0d773 (567 samples, 1.10%)</title><rect x="97.3018%" y="613" width="1.0951%" height="15" fill="rgb(226,155,13)" fg:x="50379" fg:w="567"/><text x="97.5518%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (565 samples, 1.09%)</title><rect x="97.3057%" y="597" width="1.0912%" height="15" fill="rgb(241,28,37)" fg:x="50381" fg:w="565"/><text x="97.5557%" y="607.50"></text></g><g><title>Metal`0x7ff80e2aac4a (594 samples, 1.15%)</title><rect x="97.2593%" y="677" width="1.1472%" height="15" fill="rgb(233,93,10)" fg:x="50357" fg:w="594"/><text x="97.5093%" y="687.50"></text></g><g><title>Metal`0x7ff80e2aafc4 (579 samples, 1.12%)</title><rect x="97.2883%" y="661" width="1.1183%" height="15" fill="rgb(225,113,19)" fg:x="50372" fg:w="579"/><text x="97.5383%" y="671.50"></text></g><g><title>IOAccelerator`0x7ff80e283071 (574 samples, 1.11%)</title><rect x="97.2980%" y="645" width="1.1086%" height="15" fill="rgb(241,2,18)" fg:x="50377" fg:w="574"/><text x="97.5480%" y="655.50"></text></g><g><title>IOKit`0x7ff807e0d573 (574 samples, 1.11%)</title><rect x="97.2980%" y="629" width="1.1086%" height="15" fill="rgb(228,207,21)" fg:x="50377" fg:w="574"/><text x="97.5480%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (46 samples, 0.09%)</title><rect x="98.4085%" y="661" width="0.0888%" height="15" fill="rgb(213,211,35)" fg:x="50952" fg:w="46"/><text x="98.6585%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (46 samples, 0.09%)</title><rect x="98.4085%" y="645" width="0.0888%" height="15" fill="rgb(209,83,10)" fg:x="50952" fg:w="46"/><text x="98.6585%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (44 samples, 0.08%)</title><rect x="98.4124%" y="629" width="0.0850%" height="15" fill="rgb(209,164,1)" fg:x="50954" fg:w="44"/><text x="98.6624%" y="639.50"></text></g><g><title>QuartzCore`0x7ff80c924375 (47 samples, 0.09%)</title><rect x="98.4085%" y="677" width="0.0908%" height="15" fill="rgb(213,184,43)" fg:x="50952" fg:w="47"/><text x="98.6585%" y="687.50"></text></g><g><title>QuartzCore`0x7ff80cad93c5 (9 samples, 0.02%)</title><rect x="98.5437%" y="629" width="0.0174%" height="15" fill="rgb(231,61,34)" fg:x="51022" fg:w="9"/><text x="98.7937%" y="639.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (9 samples, 0.02%)</title><rect x="98.5437%" y="613" width="0.0174%" height="15" fill="rgb(235,75,3)" fg:x="51022" fg:w="9"/><text x="98.7937%" y="623.50"></text></g><g><title>QuartzCore`0x7ff80c8d804f (45 samples, 0.09%)</title><rect x="98.5032%" y="661" width="0.0869%" height="15" fill="rgb(220,106,47)" fg:x="51001" fg:w="45"/><text x="98.7532%" y="671.50"></text></g><g><title>QuartzCore`0x7ff80c8d8153 (42 samples, 0.08%)</title><rect x="98.5090%" y="645" width="0.0811%" height="15" fill="rgb(210,196,33)" fg:x="51004" fg:w="42"/><text x="98.7590%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.02%)</title><rect x="98.5708%" y="629" width="0.0193%" height="15" fill="rgb(229,154,42)" fg:x="51036" fg:w="10"/><text x="98.8208%" y="639.50"></text></g><g><title>QuartzCore`0x7ff80c8d93f6 (11 samples, 0.02%)</title><rect x="98.5901%" y="661" width="0.0212%" height="15" fill="rgb(228,114,26)" fg:x="51046" fg:w="11"/><text x="98.8401%" y="671.50"></text></g><g><title>QuartzCore`0x7ff80cb81b4e (15 samples, 0.03%)</title><rect x="98.6133%" y="661" width="0.0290%" height="15" fill="rgb(208,144,1)" fg:x="51058" fg:w="15"/><text x="98.8633%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (15 samples, 0.03%)</title><rect x="98.6133%" y="645" width="0.0290%" height="15" fill="rgb(239,112,37)" fg:x="51058" fg:w="15"/><text x="98.8633%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (15 samples, 0.03%)</title><rect x="98.6133%" y="629" width="0.0290%" height="15" fill="rgb(210,96,50)" fg:x="51058" fg:w="15"/><text x="98.8633%" y="639.50"></text></g><g><title>QuartzCore`0x7ff80c9243f8 (74 samples, 0.14%)</title><rect x="98.5012%" y="677" width="0.1429%" height="15" fill="rgb(222,178,2)" fg:x="51000" fg:w="74"/><text x="98.7512%" y="687.50"></text></g><g><title>IOSurface`0x7ff80e27386f (31 samples, 0.06%)</title><rect x="98.7021%" y="533" width="0.0599%" height="15" fill="rgb(226,74,18)" fg:x="51104" fg:w="31"/><text x="98.9521%" y="543.50"></text></g><g><title>IOKit`0x7ff807e0d573 (31 samples, 0.06%)</title><rect x="98.7021%" y="517" width="0.0599%" height="15" fill="rgb(225,67,54)" fg:x="51104" fg:w="31"/><text x="98.9521%" y="527.50"></text></g><g><title>IOKit`0x7ff807e0d773 (30 samples, 0.06%)</title><rect x="98.7040%" y="501" width="0.0579%" height="15" fill="rgb(251,92,32)" fg:x="51105" fg:w="30"/><text x="98.9540%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (30 samples, 0.06%)</title><rect x="98.7040%" y="485" width="0.0579%" height="15" fill="rgb(228,149,22)" fg:x="51105" fg:w="30"/><text x="98.9540%" y="495.50"></text></g><g><title>QuartzCore`0x7ff80c8b2d46 (33 samples, 0.06%)</title><rect x="98.7002%" y="549" width="0.0637%" height="15" fill="rgb(243,54,13)" fg:x="51103" fg:w="33"/><text x="98.9502%" y="559.50"></text></g><g><title>IOKit`0x7ff807e0d773 (16 samples, 0.03%)</title><rect x="98.7794%" y="501" width="0.0309%" height="15" fill="rgb(243,180,28)" fg:x="51144" fg:w="16"/><text x="99.0294%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (16 samples, 0.03%)</title><rect x="98.7794%" y="485" width="0.0309%" height="15" fill="rgb(208,167,24)" fg:x="51144" fg:w="16"/><text x="99.0294%" y="495.50"></text></g><g><title>IOSurface`0x7ff80e2748b7 (18 samples, 0.03%)</title><rect x="98.7794%" y="533" width="0.0348%" height="15" fill="rgb(245,73,45)" fg:x="51144" fg:w="18"/><text x="99.0294%" y="543.50"></text></g><g><title>IOKit`0x7ff807e0d573 (18 samples, 0.03%)</title><rect x="98.7794%" y="517" width="0.0348%" height="15" fill="rgb(237,203,48)" fg:x="51144" fg:w="18"/><text x="99.0294%" y="527.50"></text></g><g><title>QuartzCore`0x7ff80c8b2dac (26 samples, 0.05%)</title><rect x="98.7658%" y="549" width="0.0502%" height="15" fill="rgb(211,197,16)" fg:x="51137" fg:w="26"/><text x="99.0158%" y="559.50"></text></g><g><title>QuartzCore`0x7ff80c8b2bed (63 samples, 0.12%)</title><rect x="98.6963%" y="565" width="0.1217%" height="15" fill="rgb(243,99,51)" fg:x="51101" fg:w="63"/><text x="98.9463%" y="575.50"></text></g><g><title>Metal`0x7ff80e3b21ca (73 samples, 0.14%)</title><rect x="98.6789%" y="581" width="0.1410%" height="15" fill="rgb(215,123,29)" fg:x="51092" fg:w="73"/><text x="98.9289%" y="591.50"></text></g><g><title>Metal`0x7ff80e2ab380 (74 samples, 0.14%)</title><rect x="98.6789%" y="597" width="0.1429%" height="15" fill="rgb(239,186,37)" fg:x="51092" fg:w="74"/><text x="98.9289%" y="607.50"></text></g><g><title>Metal`0x7ff80e2ab2da (79 samples, 0.15%)</title><rect x="98.6789%" y="613" width="0.1526%" height="15" fill="rgb(252,136,39)" fg:x="51092" fg:w="79"/><text x="98.9289%" y="623.50"></text></g><g><title>Metal`0x7ff80e2ab8a6 (6 samples, 0.01%)</title><rect x="98.8547%" y="581" width="0.0116%" height="15" fill="rgb(223,213,32)" fg:x="51183" fg:w="6"/><text x="99.1047%" y="591.50"></text></g><g><title>Metal`0x7ff80e2ab389 (6 samples, 0.01%)</title><rect x="98.8547%" y="565" width="0.0116%" height="15" fill="rgb(233,115,5)" fg:x="51183" fg:w="6"/><text x="99.1047%" y="575.50"></text></g><g><title>Metal`0x7ff80e2ab646 (20 samples, 0.04%)</title><rect x="98.8470%" y="597" width="0.0386%" height="15" fill="rgb(207,226,44)" fg:x="51179" fg:w="20"/><text x="99.0970%" y="607.50"></text></g><g><title>Metal`0x7ff80e2abb38 (8 samples, 0.02%)</title><rect x="98.9049%" y="549" width="0.0155%" height="15" fill="rgb(208,126,0)" fg:x="51209" fg:w="8"/><text x="99.1549%" y="559.50"></text></g><g><title>Metal`0x7ff80e2abb5e (19 samples, 0.04%)</title><rect x="98.9203%" y="549" width="0.0367%" height="15" fill="rgb(244,66,21)" fg:x="51217" fg:w="19"/><text x="99.1703%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (19 samples, 0.04%)</title><rect x="98.9203%" y="533" width="0.0367%" height="15" fill="rgb(222,97,12)" fg:x="51217" fg:w="19"/><text x="99.1703%" y="543.50"></text></g><g><title>Metal`0x7ff80e2aba19 (28 samples, 0.05%)</title><rect x="98.9049%" y="565" width="0.0541%" height="15" fill="rgb(219,213,19)" fg:x="51209" fg:w="28"/><text x="99.1549%" y="575.50"></text></g><g><title>Metal`0x7ff80e2ab97c (46 samples, 0.09%)</title><rect x="98.8933%" y="581" width="0.0888%" height="15" fill="rgb(252,169,30)" fg:x="51203" fg:w="46"/><text x="99.1433%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.01%)</title><rect x="98.9686%" y="565" width="0.0135%" height="15" fill="rgb(206,32,51)" fg:x="51242" fg:w="7"/><text x="99.2186%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (82 samples, 0.16%)</title><rect x="98.9841%" y="565" width="0.1584%" height="15" fill="rgb(250,172,42)" fg:x="51250" fg:w="82"/><text x="99.2341%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (80 samples, 0.15%)</title><rect x="98.9879%" y="549" width="0.1545%" height="15" fill="rgb(209,34,43)" fg:x="51252" fg:w="80"/><text x="99.2379%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (12 samples, 0.02%)</title><rect x="99.1483%" y="549" width="0.0232%" height="15" fill="rgb(223,11,35)" fg:x="51335" fg:w="12"/><text x="99.3983%" y="559.50"></text></g><g><title>Metal`0x7ff80e2abc73 (99 samples, 0.19%)</title><rect x="98.9841%" y="581" width="0.1912%" height="15" fill="rgb(251,219,26)" fg:x="51250" fg:w="99"/><text x="99.2341%" y="591.50"></text></g><g><title>libdispatch.dylib`dispatch_async (17 samples, 0.03%)</title><rect x="99.1425%" y="565" width="0.0328%" height="15" fill="rgb(231,119,3)" fg:x="51332" fg:w="17"/><text x="99.3925%" y="575.50"></text></g><g><title>Metal`0x7ff80e2ab656 (155 samples, 0.30%)</title><rect x="98.8856%" y="597" width="0.2994%" height="15" fill="rgb(216,97,11)" fg:x="51199" fg:w="155"/><text x="99.1356%" y="607.50"></text></g><g><title>Metal`0x7ff80e2ab520 (182 samples, 0.35%)</title><rect x="98.8450%" y="613" width="0.3515%" height="15" fill="rgb(223,59,9)" fg:x="51178" fg:w="182"/><text x="99.0950%" y="623.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (7 samples, 0.01%)</title><rect x="99.1965%" y="597" width="0.0135%" height="15" fill="rgb(233,93,31)" fg:x="51360" fg:w="7"/><text x="99.4465%" y="607.50"></text></g><g><title>Metal`0x7ff80e2ab54a (14 samples, 0.03%)</title><rect x="99.1965%" y="613" width="0.0270%" height="15" fill="rgb(239,81,33)" fg:x="51360" fg:w="14"/><text x="99.4465%" y="623.50"></text></g><g><title>IOAccelerator`0x7ff80e2830d0 (295 samples, 0.57%)</title><rect x="98.6731%" y="629" width="0.5698%" height="15" fill="rgb(213,120,34)" fg:x="51089" fg:w="295"/><text x="98.9231%" y="639.50"></text></g><g><title>AppleIntelKBLGraphicsMTLDriver`-[MTLIGAccelCommandBuffer dealloc] (10 samples, 0.02%)</title><rect x="99.2564%" y="581" width="0.0193%" height="15" fill="rgb(243,49,53)" fg:x="51391" fg:w="10"/><text x="99.5064%" y="591.50"></text></g><g><title>libsystem_blocks.dylib`0x7ff804aca579 (14 samples, 0.03%)</title><rect x="99.2525%" y="613" width="0.0270%" height="15" fill="rgb(247,216,33)" fg:x="51389" fg:w="14"/><text x="99.5025%" y="623.50"></text></g><g><title>libsystem_blocks.dylib`0x7ff804aca743 (12 samples, 0.02%)</title><rect x="99.2564%" y="597" width="0.0232%" height="15" fill="rgb(226,26,14)" fg:x="51391" fg:w="12"/><text x="99.5064%" y="607.50"></text></g><g><title>libsystem_blocks.dylib`0x7ff804aca582 (10 samples, 0.02%)</title><rect x="99.2796%" y="613" width="0.0193%" height="15" fill="rgb(215,49,53)" fg:x="51403" fg:w="10"/><text x="99.5296%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (10 samples, 0.02%)</title><rect x="99.2796%" y="597" width="0.0193%" height="15" fill="rgb(245,162,40)" fg:x="51403" fg:w="10"/><text x="99.5296%" y="607.50"></text></g><g><title>IOAccelerator`0x7ff80e2830d8 (32 samples, 0.06%)</title><rect x="99.2429%" y="629" width="0.0618%" height="15" fill="rgb(229,68,17)" fg:x="51384" fg:w="32"/><text x="99.4929%" y="639.50"></text></g><g><title>QuartzCore`0x7ff80c91e46d (42 samples, 0.08%)</title><rect x="99.3317%" y="597" width="0.0811%" height="15" fill="rgb(213,182,10)" fg:x="51430" fg:w="42"/><text x="99.5817%" y="607.50"></text></g><g><title>QuartzCore`0x7ff80c8e1bf6 (38 samples, 0.07%)</title><rect x="99.3395%" y="581" width="0.0734%" height="15" fill="rgb(245,125,30)" fg:x="51434" fg:w="38"/><text x="99.5895%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (38 samples, 0.07%)</title><rect x="99.3395%" y="565" width="0.0734%" height="15" fill="rgb(232,202,2)" fg:x="51434" fg:w="38"/><text x="99.5895%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (38 samples, 0.07%)</title><rect x="99.3395%" y="549" width="0.0734%" height="15" fill="rgb(237,140,51)" fg:x="51434" fg:w="38"/><text x="99.5895%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (38 samples, 0.07%)</title><rect x="99.3395%" y="533" width="0.0734%" height="15" fill="rgb(236,157,25)" fg:x="51434" fg:w="38"/><text x="99.5895%" y="543.50"></text></g><g><title>QuartzCore`0x7ff80c8b31b2 (55 samples, 0.11%)</title><rect x="99.3163%" y="613" width="0.1062%" height="15" fill="rgb(219,209,0)" fg:x="51422" fg:w="55"/><text x="99.5663%" y="623.50"></text></g><g><title>IOSurface`0x7ff80e274c01 (69 samples, 0.13%)</title><rect x="99.3066%" y="629" width="0.1333%" height="15" fill="rgb(240,116,54)" fg:x="51417" fg:w="69"/><text x="99.5566%" y="639.50"></text></g><g><title>IOSurface`0x7ff80e274c1c (6 samples, 0.01%)</title><rect x="99.4399%" y="629" width="0.0116%" height="15" fill="rgb(216,10,36)" fg:x="51486" fg:w="6"/><text x="99.6899%" y="639.50"></text></g><g><title>IOKit`0x7ff807e0f981 (425 samples, 0.82%)</title><rect x="98.6635%" y="645" width="0.8208%" height="15" fill="rgb(222,72,44)" fg:x="51084" fg:w="425"/><text x="98.9135%" y="655.50"></text></g><g><title>IOKit`0x7ff807e0f802 (430 samples, 0.83%)</title><rect x="98.6577%" y="661" width="0.8305%" height="15" fill="rgb(232,159,9)" fg:x="51081" fg:w="430"/><text x="98.9077%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (169 samples, 0.33%)</title><rect x="99.4920%" y="661" width="0.3264%" height="15" fill="rgb(210,39,32)" fg:x="51513" fg:w="169"/><text x="99.7420%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (168 samples, 0.32%)</title><rect x="99.4940%" y="645" width="0.3245%" height="15" fill="rgb(216,194,45)" fg:x="51514" fg:w="168"/><text x="99.7440%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (159 samples, 0.31%)</title><rect x="99.5114%" y="629" width="0.3071%" height="15" fill="rgb(218,18,35)" fg:x="51523" fg:w="159"/><text x="99.7614%" y="639.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (608 samples, 1.17%)</title><rect x="98.6500%" y="677" width="1.1743%" height="15" fill="rgb(207,83,51)" fg:x="51077" fg:w="608"/><text x="98.9000%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1,365 samples, 2.64%)</title><rect x="97.2072%" y="693" width="2.6364%" height="15" fill="rgb(225,63,43)" fg:x="50330" fg:w="1365"/><text x="97.4572%" y="703.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (1,382 samples, 2.67%)</title><rect x="97.1782%" y="709" width="2.6692%" height="15" fill="rgb(207,57,36)" fg:x="50315" fg:w="1382"/><text x="97.4282%" y="719.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (1,401 samples, 2.71%)</title><rect x="97.1473%" y="725" width="2.7059%" height="15" fill="rgb(216,99,33)" fg:x="50299" fg:w="1401"/><text x="97.3973%" y="735.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1,538 samples, 2.97%)</title><rect x="96.8847%" y="741" width="2.9705%" height="15" fill="rgb(225,42,16)" fg:x="50163" fg:w="1538"/><text x="97.1347%" y="751.50">lib..</text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (6 samples, 0.01%)</title><rect x="99.8551%" y="741" width="0.0116%" height="15" fill="rgb(220,201,45)" fg:x="51701" fg:w="6"/><text x="100.1051%" y="751.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (6 samples, 0.01%)</title><rect x="99.8551%" y="725" width="0.0116%" height="15" fill="rgb(225,33,4)" fg:x="51701" fg:w="6"/><text x="100.1051%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (17 samples, 0.03%)</title><rect x="99.8667%" y="741" width="0.0328%" height="15" fill="rgb(224,33,50)" fg:x="51707" fg:w="17"/><text x="100.1167%" y="751.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (12 samples, 0.02%)</title><rect x="99.8764%" y="725" width="0.0232%" height="15" fill="rgb(246,198,51)" fg:x="51712" fg:w="12"/><text x="100.1264%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1,575 samples, 3.04%)</title><rect x="96.8673%" y="757" width="3.0419%" height="15" fill="rgb(205,22,4)" fg:x="50154" fg:w="1575"/><text x="97.1173%" y="767.50">lib..</text></g><g><title>libdispatch.dylib`_dispatch_lane_push (8 samples, 0.02%)</title><rect x="99.9092%" y="757" width="0.0155%" height="15" fill="rgb(206,3,8)" fg:x="51729" fg:w="8"/><text x="100.1592%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_wakeup (6 samples, 0.01%)</title><rect x="99.9324%" y="757" width="0.0116%" height="15" fill="rgb(251,23,15)" fg:x="51741" fg:w="6"/><text x="100.1824%" y="767.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (6 samples, 0.01%)</title><rect x="99.9479%" y="757" width="0.0116%" height="15" fill="rgb(252,88,28)" fg:x="51749" fg:w="6"/><text x="100.1979%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (2,409 samples, 4.65%)</title><rect x="95.3144%" y="805" width="4.6527%" height="15" fill="rgb(212,127,14)" fg:x="49350" fg:w="2409"/><text x="95.5644%" y="815.50">libsy..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (1,732 samples, 3.35%)</title><rect x="96.6220%" y="789" width="3.3452%" height="15" fill="rgb(247,145,37)" fg:x="50027" fg:w="1732"/><text x="96.8720%" y="799.50">lib..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1,716 samples, 3.31%)</title><rect x="96.6529%" y="773" width="3.3143%" height="15" fill="rgb(209,117,53)" fg:x="50043" fg:w="1716"/><text x="96.9029%" y="783.50">lib..</text></g><g><title>SkyLight`0x7ff809a37b6a (6 samples, 0.01%)</title><rect x="99.9768%" y="613" width="0.0116%" height="15" fill="rgb(212,90,42)" fg:x="51764" fg:w="6"/><text x="100.2268%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (6 samples, 0.01%)</title><rect x="99.9768%" y="597" width="0.0116%" height="15" fill="rgb(218,164,37)" fg:x="51764" fg:w="6"/><text x="100.2268%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (6 samples, 0.01%)</title><rect x="99.9768%" y="581" width="0.0116%" height="15" fill="rgb(246,65,34)" fg:x="51764" fg:w="6"/><text x="100.2268%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.01%)</title><rect x="99.9768%" y="565" width="0.0116%" height="15" fill="rgb(231,100,33)" fg:x="51764" fg:w="6"/><text x="100.2268%" y="575.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (14 samples, 0.03%)</title><rect x="99.9672%" y="725" width="0.0270%" height="15" fill="rgb(228,126,14)" fg:x="51759" fg:w="14"/><text x="100.2172%" y="735.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (14 samples, 0.03%)</title><rect x="99.9672%" y="709" width="0.0270%" height="15" fill="rgb(215,173,21)" fg:x="51759" fg:w="14"/><text x="100.2172%" y="719.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (14 samples, 0.03%)</title><rect x="99.9672%" y="693" width="0.0270%" height="15" fill="rgb(210,6,40)" fg:x="51759" fg:w="14"/><text x="100.2172%" y="703.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (14 samples, 0.03%)</title><rect x="99.9672%" y="677" width="0.0270%" height="15" fill="rgb(212,48,18)" fg:x="51759" fg:w="14"/><text x="100.2172%" y="687.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (14 samples, 0.03%)</title><rect x="99.9672%" y="661" width="0.0270%" height="15" fill="rgb(230,214,11)" fg:x="51759" fg:w="14"/><text x="100.2172%" y="671.50"></text></g><g><title>SkyLight`0x7ff809b62e14 (10 samples, 0.02%)</title><rect x="99.9749%" y="645" width="0.0193%" height="15" fill="rgb(254,105,39)" fg:x="51763" fg:w="10"/><text x="100.2249%" y="655.50"></text></g><g><title>SkyLight`0x7ff809d456e2 (9 samples, 0.02%)</title><rect x="99.9768%" y="629" width="0.0174%" height="15" fill="rgb(245,158,5)" fg:x="51764" fg:w="9"/><text x="100.2268%" y="639.50"></text></g><g><title>all (51,776 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(249,208,11)" fg:x="0" fg:w="51776"/><text x="0.2500%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (17 samples, 0.03%)</title><rect x="99.9672%" y="805" width="0.0328%" height="15" fill="rgb(210,39,28)" fg:x="51759" fg:w="17"/><text x="100.2172%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (17 samples, 0.03%)</title><rect x="99.9672%" y="789" width="0.0328%" height="15" fill="rgb(211,56,53)" fg:x="51759" fg:w="17"/><text x="100.2172%" y="799.50"></text></g><g><title>AppKit`_NSEventThread (17 samples, 0.03%)</title><rect x="99.9672%" y="773" width="0.0328%" height="15" fill="rgb(226,201,30)" fg:x="51759" fg:w="17"/><text x="100.2172%" y="783.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (17 samples, 0.03%)</title><rect x="99.9672%" y="757" width="0.0328%" height="15" fill="rgb(239,101,34)" fg:x="51759" fg:w="17"/><text x="100.2172%" y="767.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (17 samples, 0.03%)</title><rect x="99.9672%" y="741" width="0.0328%" height="15" fill="rgb(226,209,5)" fg:x="51759" fg:w="17"/><text x="100.2172%" y="751.50"></text></g></svg></svg>